(function() {var implementors = {};
implementors["byteorder"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a>","synthetic":true,"types":["byteorder::BigEndian"]},{"text":"impl Freeze for <a class=\"enum\" href=\"byteorder/enum.LittleEndian.html\" title=\"enum byteorder::LittleEndian\">LittleEndian</a>","synthetic":true,"types":["byteorder::LittleEndian"]}];
implementors["bytes"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"bytes/struct.Bytes.html\" title=\"struct bytes::Bytes\">Bytes</a>","synthetic":true,"types":["bytes::bytes::Bytes"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"bytes/struct.BytesMut.html\" title=\"struct bytes::BytesMut\">BytesMut</a>","synthetic":true,"types":["bytes::bytes::BytesMut"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Chain.html\" title=\"struct bytes::buf::Chain\">Chain</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::chain::Chain"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Iter.html\" title=\"struct bytes::buf::Iter\">Iter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::iter::Iter"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Reader.html\" title=\"struct bytes::buf::Reader\">Reader</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::reader::Reader"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Take.html\" title=\"struct bytes::buf::Take\">Take</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::take::Take"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Writer.html\" title=\"struct bytes::buf::Writer\">Writer</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::writer::Writer"]}];
implementors["c2_chacha"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"c2_chacha/guts/struct.ChaCha.html\" title=\"struct c2_chacha::guts::ChaCha\">ChaCha</a>","synthetic":true,"types":["c2_chacha::guts::ChaCha"]},{"text":"impl&lt;V&gt; Freeze for <a class=\"struct\" href=\"c2_chacha/guts/struct.State.html\" title=\"struct c2_chacha::guts::State\">State</a>&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":["c2_chacha::guts::State"]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_deque/struct.Worker.html\" title=\"struct crossbeam_deque::Worker\">Worker</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_deque::Worker"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_deque/struct.Stealer.html\" title=\"struct crossbeam_deque::Stealer\">Stealer</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_deque::Stealer"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_deque/struct.Injector.html\" title=\"struct crossbeam_deque::Injector\">Injector</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_deque::Injector"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"crossbeam_deque/enum.Steal.html\" title=\"enum crossbeam_deque::Steal\">Steal</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_deque::Steal"]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Atomic.html\" title=\"struct crossbeam_epoch::Atomic\">Atomic</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_epoch::atomic::Atomic"]},{"text":"impl&lt;'g, T, P&gt; Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.CompareAndSetError.html\" title=\"struct crossbeam_epoch::CompareAndSetError\">CompareAndSetError</a>&lt;'g, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_epoch::atomic::CompareAndSetError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Owned.html\" title=\"struct crossbeam_epoch::Owned\">Owned</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_epoch::atomic::Owned"]},{"text":"impl&lt;'g, T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Shared.html\" title=\"struct crossbeam_epoch::Shared\">Shared</a>&lt;'g, T&gt;","synthetic":true,"types":["crossbeam_epoch::atomic::Shared"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Collector.html\" title=\"struct crossbeam_epoch::Collector\">Collector</a>","synthetic":true,"types":["crossbeam_epoch::collector::Collector"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.LocalHandle.html\" title=\"struct crossbeam_epoch::LocalHandle\">LocalHandle</a>","synthetic":true,"types":["crossbeam_epoch::collector::LocalHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Guard.html\" title=\"struct crossbeam_epoch::Guard\">Guard</a>","synthetic":true,"types":["crossbeam_epoch::guard::Guard"]}];
implementors["crossbeam_queue"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_queue/struct.ArrayQueue.html\" title=\"struct crossbeam_queue::ArrayQueue\">ArrayQueue</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_queue::array_queue::ArrayQueue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_queue/struct.PopError.html\" title=\"struct crossbeam_queue::PopError\">PopError</a>","synthetic":true,"types":["crossbeam_queue::err::PopError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_queue/struct.PushError.html\" title=\"struct crossbeam_queue::PushError\">PushError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_queue::err::PushError"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_queue/struct.SegQueue.html\" title=\"struct crossbeam_queue::SegQueue\">SegQueue</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_queue::seg_queue::SegQueue"]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/struct.CachePadded.html\" title=\"struct crossbeam_utils::CachePadded\">CachePadded</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_utils::cache_padded::CachePadded"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"crossbeam_utils/struct.Backoff.html\" title=\"struct crossbeam_utils::Backoff\">Backoff</a>","synthetic":true,"types":["crossbeam_utils::backoff::Backoff"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_utils/atomic/struct.AtomicCell.html\" title=\"struct crossbeam_utils::atomic::AtomicCell\">AtomicCell</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_utils::atomic::atomic_cell::AtomicCell"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.Parker.html\" title=\"struct crossbeam_utils::sync::Parker\">Parker</a>","synthetic":true,"types":["crossbeam_utils::sync::parker::Parker"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.Unparker.html\" title=\"struct crossbeam_utils::sync::Unparker\">Unparker</a>","synthetic":true,"types":["crossbeam_utils::sync::parker::Unparker"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLock.html\" title=\"struct crossbeam_utils::sync::ShardedLock\">ShardedLock</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_utils::sync::sharded_lock::ShardedLock"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLockReadGuard.html\" title=\"struct crossbeam_utils::sync::ShardedLockReadGuard\">ShardedLockReadGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["crossbeam_utils::sync::sharded_lock::ShardedLockReadGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLockWriteGuard.html\" title=\"struct crossbeam_utils::sync::ShardedLockWriteGuard\">ShardedLockWriteGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["crossbeam_utils::sync::sharded_lock::ShardedLockWriteGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.WaitGroup.html\" title=\"struct crossbeam_utils::sync::WaitGroup\">WaitGroup</a>","synthetic":true,"types":["crossbeam_utils::sync::wait_group::WaitGroup"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/thread/struct.Scope.html\" title=\"struct crossbeam_utils::thread::Scope\">Scope</a>&lt;'env&gt;","synthetic":true,"types":["crossbeam_utils::thread::Scope"]},{"text":"impl&lt;'scope, 'env&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/thread/struct.ScopedThreadBuilder.html\" title=\"struct crossbeam_utils::thread::ScopedThreadBuilder\">ScopedThreadBuilder</a>&lt;'scope, 'env&gt;","synthetic":true,"types":["crossbeam_utils::thread::ScopedThreadBuilder"]},{"text":"impl&lt;'scope, T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/thread/struct.ScopedJoinHandle.html\" title=\"struct crossbeam_utils::thread::ScopedJoinHandle\">ScopedJoinHandle</a>&lt;'scope, T&gt;","synthetic":true,"types":["crossbeam_utils::thread::ScopedJoinHandle"]}];
implementors["fnv"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"fnv/struct.FnvHasher.html\" title=\"struct fnv::FnvHasher\">FnvHasher</a>","synthetic":true,"types":["fnv::FnvHasher"]}];
implementors["futures"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"futures/enum.Async.html\" title=\"enum futures::Async\">Async</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::poll::Async"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"futures/enum.AsyncSink.html\" title=\"enum futures::AsyncSink\">AsyncSink</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::poll::AsyncSink"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Empty.html\" title=\"struct futures::future::Empty\">Empty</a>&lt;T, E&gt;","synthetic":true,"types":["futures::future::empty::Empty"]},{"text":"impl&lt;F, R&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Lazy.html\" title=\"struct futures::future::Lazy\">Lazy</a>&lt;F, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::lazy::Lazy"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.PollFn.html\" title=\"struct futures::future::PollFn\">PollFn</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::poll_fn::PollFn"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.FutureResult.html\" title=\"struct futures::future::FutureResult\">FutureResult</a>&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::result_::FutureResult"]},{"text":"impl&lt;A, F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.LoopFn.html\" title=\"struct futures::future::LoopFn\">LoopFn</a>&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::loop_fn::LoopFn"]},{"text":"impl&lt;A, B, F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.AndThen.html\" title=\"struct futures::future::AndThen\">AndThen</a>&lt;A, B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::and_then::AndThen"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Flatten.html\" title=\"struct futures::future::Flatten\">Flatten</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;A as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a> as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::flatten::Flatten"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.FlattenStream.html\" title=\"struct futures::future::FlattenStream\">FlattenStream</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::flatten_stream::FlattenStream"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Fuse.html\" title=\"struct futures::future::Fuse\">Fuse</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::fuse::Fuse"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.IntoStream.html\" title=\"struct futures::future::IntoStream\">IntoStream</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::into_stream::IntoStream"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Join.html\" title=\"struct futures::future::Join\">Join</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::join::Join"]},{"text":"impl&lt;A, B, C&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Join3.html\" title=\"struct futures::future::Join3\">Join3</a>&lt;A, B, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::join::Join3"]},{"text":"impl&lt;A, B, C, D&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Join4.html\" title=\"struct futures::future::Join4\">Join4</a>&lt;A, B, C, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;D as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::join::Join4"]},{"text":"impl&lt;A, B, C, D, E&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Join5.html\" title=\"struct futures::future::Join5\">Join5</a>&lt;A, B, C, D, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;D as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;E as <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::join::Join5"]},{"text":"impl&lt;A, F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Map.html\" title=\"struct futures::future::Map\">Map</a>&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::map::Map"]},{"text":"impl&lt;A, F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.MapErr.html\" title=\"struct futures::future::MapErr\">MapErr</a>&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::map_err::MapErr"]},{"text":"impl&lt;A, E&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.FromErr.html\" title=\"struct futures::future::FromErr\">FromErr</a>&lt;A, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::from_err::FromErr"]},{"text":"impl&lt;A, B, F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.OrElse.html\" title=\"struct futures::future::OrElse\">OrElse</a>&lt;A, B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::or_else::OrElse"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Select.html\" title=\"struct futures::future::Select\">Select</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::select::Select"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.SelectNext.html\" title=\"struct futures::future::SelectNext\">SelectNext</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::select::SelectNext"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Select2.html\" title=\"struct futures::future::Select2\">Select2</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::select2::Select2"]},{"text":"impl&lt;A, B, F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Then.html\" title=\"struct futures::future::Then\">Then</a>&lt;A, B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::then::Then"]},{"text":"impl&lt;A, F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Inspect.html\" title=\"struct futures::future::Inspect\">Inspect</a>&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::inspect::Inspect"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.CatchUnwind.html\" title=\"struct futures::future::CatchUnwind\">CatchUnwind</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::catch_unwind::CatchUnwind"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.JoinAll.html\" title=\"struct futures::future::JoinAll\">JoinAll</a>&lt;I&gt;","synthetic":true,"types":["futures::future::join_all::JoinAll"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.SelectAll.html\" title=\"struct futures::future::SelectAll\">SelectAll</a>&lt;A&gt;","synthetic":true,"types":["futures::future::select_all::SelectAll"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.SelectOk.html\" title=\"struct futures::future::SelectOk\">SelectOk</a>&lt;A&gt;","synthetic":true,"types":["futures::future::select_ok::SelectOk"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.Shared.html\" title=\"struct futures::future::Shared\">Shared</a>&lt;F&gt;","synthetic":true,"types":["futures::future::shared::Shared"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.SharedItem.html\" title=\"struct futures::future::SharedItem\">SharedItem</a>&lt;T&gt;","synthetic":true,"types":["futures::future::shared::SharedItem"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.SharedError.html\" title=\"struct futures::future::SharedError\">SharedError</a>&lt;E&gt;","synthetic":true,"types":["futures::future::shared::SharedError"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures/future/struct.ExecuteError.html\" title=\"struct futures::future::ExecuteError\">ExecuteError</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::ExecuteError"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"enum\" href=\"futures/future/enum.Loop.html\" title=\"enum futures::future::Loop\">Loop</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::loop_fn::Loop"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"enum\" href=\"futures/future/enum.Either.html\" title=\"enum futures::future::Either\">Either</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::future::either::Either"]},{"text":"impl Freeze for <a class=\"enum\" href=\"futures/future/enum.ExecuteErrorKind.html\" title=\"enum futures::future::ExecuteErrorKind\">ExecuteErrorKind</a>","synthetic":true,"types":["futures::future::ExecuteErrorKind"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Iter.html\" title=\"struct futures::stream::Iter\">Iter</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::iter::Iter"]},{"text":"impl&lt;I, E&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.IterOk.html\" title=\"struct futures::stream::IterOk\">IterOk</a>&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::iter_ok::IterOk"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.IterResult.html\" title=\"struct futures::stream::IterResult\">IterResult</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::iter_result::IterResult"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Repeat.html\" title=\"struct futures::stream::Repeat\">Repeat</a>&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::repeat::Repeat"]},{"text":"impl&lt;S, F, U&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.AndThen.html\" title=\"struct futures::stream::AndThen\">AndThen</a>&lt;S, F, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::and_then::AndThen"]},{"text":"impl&lt;S1, S2&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Chain.html\" title=\"struct futures::stream::Chain\">Chain</a>&lt;S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::chain::Chain"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Concat.html\" title=\"struct futures::stream::Concat\">Concat</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::concat::Concat"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Concat2.html\" title=\"struct futures::stream::Concat2\">Concat2</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::concat::Concat2"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Empty.html\" title=\"struct futures::stream::Empty\">Empty</a>&lt;T, E&gt;","synthetic":true,"types":["futures::stream::empty::Empty"]},{"text":"impl&lt;S, F&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Filter.html\" title=\"struct futures::stream::Filter\">Filter</a>&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::filter::Filter"]},{"text":"impl&lt;S, F&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.FilterMap.html\" title=\"struct futures::stream::FilterMap\">FilterMap</a>&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::filter_map::FilterMap"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Flatten.html\" title=\"struct futures::stream::Flatten\">Flatten</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::flatten::Flatten"]},{"text":"impl&lt;S, F, Fut, T&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Fold.html\" title=\"struct futures::stream::Fold\">Fold</a>&lt;S, F, Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::fold::Fold"]},{"text":"impl&lt;S, F, U&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.ForEach.html\" title=\"struct futures::stream::ForEach\">ForEach</a>&lt;S, F, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::for_each::ForEach"]},{"text":"impl&lt;S, E&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.FromErr.html\" title=\"struct futures::stream::FromErr\">FromErr</a>&lt;S, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::from_err::FromErr"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Fuse.html\" title=\"struct futures::stream::Fuse\">Fuse</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::fuse::Fuse"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.StreamFuture.html\" title=\"struct futures::stream::StreamFuture\">StreamFuture</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::future::StreamFuture"]},{"text":"impl&lt;S, F&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Inspect.html\" title=\"struct futures::stream::Inspect\">Inspect</a>&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::inspect::Inspect"]},{"text":"impl&lt;S, F&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.InspectErr.html\" title=\"struct futures::stream::InspectErr\">InspectErr</a>&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::inspect_err::InspectErr"]},{"text":"impl&lt;S, F&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Map.html\" title=\"struct futures::stream::Map\">Map</a>&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::map::Map"]},{"text":"impl&lt;S, F&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.MapErr.html\" title=\"struct futures::stream::MapErr\">MapErr</a>&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::map_err::MapErr"]},{"text":"impl&lt;S1, S2&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Merge.html\" title=\"struct futures::stream::Merge\">Merge</a>&lt;S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S2 as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Error\" title=\"type futures::stream::Stream::Error\">Error</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::merge::Merge"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Once.html\" title=\"struct futures::stream::Once\">Once</a>&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::once::Once"]},{"text":"impl&lt;S, F, U&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.OrElse.html\" title=\"struct futures::stream::OrElse\">OrElse</a>&lt;S, F, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::or_else::OrElse"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Peekable.html\" title=\"struct futures::stream::Peekable\">Peekable</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::peek::Peekable"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.PollFn.html\" title=\"struct futures::stream::PollFn\">PollFn</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::poll_fn::PollFn"]},{"text":"impl&lt;S1, S2&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Select.html\" title=\"struct futures::stream::Select\">Select</a>&lt;S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::select::Select"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Skip.html\" title=\"struct futures::stream::Skip\">Skip</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::skip::Skip"]},{"text":"impl&lt;S, P, R&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.SkipWhile.html\" title=\"struct futures::stream::SkipWhile\">SkipWhile</a>&lt;S, P, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::skip_while::SkipWhile"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Take.html\" title=\"struct futures::stream::Take\">Take</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::take::Take"]},{"text":"impl&lt;S, P, R&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.TakeWhile.html\" title=\"struct futures::stream::TakeWhile\">TakeWhile</a>&lt;S, P, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::take_while::TakeWhile"]},{"text":"impl&lt;S, F, U&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Then.html\" title=\"struct futures::stream::Then\">Then</a>&lt;S, F, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::then::Then"]},{"text":"impl&lt;T, F, Fut&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Unfold.html\" title=\"struct futures::stream::Unfold\">Unfold</a>&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::unfold::Unfold"]},{"text":"impl&lt;S1, S2&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Zip.html\" title=\"struct futures::stream::Zip\">Zip</a>&lt;S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S1 as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures::stream::Stream::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S2 as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::zip::Zip"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Forward.html\" title=\"struct futures::stream::Forward\">Forward</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::forward::Forward"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Buffered.html\" title=\"struct futures::stream::Buffered\">Buffered</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::buffered::Buffered"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.BufferUnordered.html\" title=\"struct futures::stream::BufferUnordered\">BufferUnordered</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::buffer_unordered::BufferUnordered"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.CatchUnwind.html\" title=\"struct futures::stream::CatchUnwind\">CatchUnwind</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::catch_unwind::CatchUnwind"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Chunks.html\" title=\"struct futures::stream::Chunks\">Chunks</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Error\" title=\"type futures::stream::Stream::Error\">Error</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::chunks::Chunks"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.Collect.html\" title=\"struct futures::stream::Collect\">Collect</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::collect::Collect"]},{"text":"impl&lt;S&gt; !Freeze for <a class=\"struct\" href=\"futures/stream/struct.Wait.html\" title=\"struct futures::stream::Wait\">Wait</a>&lt;S&gt;","synthetic":true,"types":["futures::stream::wait::Wait"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.SplitStream.html\" title=\"struct futures::stream::SplitStream\">SplitStream</a>&lt;S&gt;","synthetic":true,"types":["futures::stream::split::SplitStream"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.SplitSink.html\" title=\"struct futures::stream::SplitSink\">SplitSink</a>&lt;S&gt;","synthetic":true,"types":["futures::stream::split::SplitSink"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.ReuniteError.html\" title=\"struct futures::stream::ReuniteError\">ReuniteError</a>&lt;T&gt;","synthetic":true,"types":["futures::stream::split::ReuniteError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/stream/struct.FuturesOrdered.html\" title=\"struct futures::stream::FuturesOrdered\">FuturesOrdered</a>&lt;T&gt;","synthetic":true,"types":["futures::stream::futures_ordered::FuturesOrdered"]},{"text":"impl&lt;I1, I2&gt; Freeze for <a class=\"enum\" href=\"futures/stream/enum.MergedItem.html\" title=\"enum futures::stream::MergedItem\">MergedItem</a>&lt;I1, I2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::stream::merge::MergedItem"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures/stream/futures_unordered/struct.FuturesUnordered.html\" title=\"struct futures::stream::futures_unordered::FuturesUnordered\">FuturesUnordered</a>&lt;F&gt;","synthetic":true,"types":["futures::stream::futures_unordered::FuturesUnordered"]},{"text":"impl&lt;'a, F&gt; Freeze for <a class=\"struct\" href=\"futures/stream/futures_unordered/struct.IterMut.html\" title=\"struct futures::stream::futures_unordered::IterMut\">IterMut</a>&lt;'a, F&gt;","synthetic":true,"types":["futures::stream::futures_unordered::IterMut"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/sink/struct.Buffer.html\" title=\"struct futures::sink::Buffer\">Buffer</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sink::buffer::Buffer"]},{"text":"impl&lt;S&gt; !Freeze for <a class=\"struct\" href=\"futures/sink/struct.Wait.html\" title=\"struct futures::sink::Wait\">Wait</a>&lt;S&gt;","synthetic":true,"types":["futures::sink::wait::Wait"]},{"text":"impl&lt;S, U, F, Fut&gt; Freeze for <a class=\"struct\" href=\"futures/sink/struct.With.html\" title=\"struct futures::sink::With\">With</a>&lt;S, U, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/sink/trait.Sink.html\" title=\"trait futures::sink::Sink\">Sink</a>&gt;::<a class=\"type\" href=\"futures/sink/trait.Sink.html#associatedtype.SinkItem\" title=\"type futures::sink::Sink::SinkItem\">SinkItem</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sink::with::With"]},{"text":"impl&lt;S, U, F, St&gt; Freeze for <a class=\"struct\" href=\"futures/sink/struct.WithFlatMap.html\" title=\"struct futures::sink::WithFlatMap\">WithFlatMap</a>&lt;S, U, F, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/sink/trait.Sink.html\" title=\"trait futures::sink::Sink\">Sink</a>&gt;::<a class=\"type\" href=\"futures/sink/trait.Sink.html#associatedtype.SinkItem\" title=\"type futures::sink::Sink::SinkItem\">SinkItem</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sink::with_flat_map::WithFlatMap"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/sink/struct.Flush.html\" title=\"struct futures::sink::Flush\">Flush</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sink::flush::Flush"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/sink/struct.Send.html\" title=\"struct futures::sink::Send\">Send</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/sink/trait.Sink.html\" title=\"trait futures::sink::Sink\">Sink</a>&gt;::<a class=\"type\" href=\"futures/sink/trait.Sink.html#associatedtype.SinkItem\" title=\"type futures::sink::Sink::SinkItem\">SinkItem</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sink::send::Send"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"futures/sink/struct.SendAll.html\" title=\"struct futures::sink::SendAll\">SendAll</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sink::send_all::SendAll"]},{"text":"impl&lt;S, F&gt; Freeze for <a class=\"struct\" href=\"futures/sink/struct.SinkMapErr.html\" title=\"struct futures::sink::SinkMapErr\">SinkMapErr</a>&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sink::map_err::SinkMapErr"]},{"text":"impl&lt;S, E&gt; Freeze for <a class=\"struct\" href=\"futures/sink/struct.SinkFromErr.html\" title=\"struct futures::sink::SinkFromErr\">SinkFromErr</a>&lt;S, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sink::from_err::SinkFromErr"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"futures/sink/struct.Fanout.html\" title=\"struct futures::sink::Fanout\">Fanout</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"futures/sink/trait.Sink.html\" title=\"trait futures::sink::Sink\">Sink</a>&gt;::<a class=\"type\" href=\"futures/sink/trait.Sink.html#associatedtype.SinkItem\" title=\"type futures::sink::Sink::SinkItem\">SinkItem</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as <a class=\"trait\" href=\"futures/sink/trait.Sink.html\" title=\"trait futures::sink::Sink\">Sink</a>&gt;::<a class=\"type\" href=\"futures/sink/trait.Sink.html#associatedtype.SinkItem\" title=\"type futures::sink::Sink::SinkItem\">SinkItem</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sink::fanout::Fanout"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures/task/struct.Task.html\" title=\"struct futures::task::Task\">Task</a>","synthetic":true,"types":["futures::task_impl::Task"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"futures/executor/struct.Spawn.html\" title=\"struct futures::executor::Spawn\">Spawn</a>&lt;T&gt;","synthetic":true,"types":["futures::task_impl::Spawn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures/executor/struct.NotifyHandle.html\" title=\"struct futures::executor::NotifyHandle\">NotifyHandle</a>","synthetic":true,"types":["futures::task_impl::NotifyHandle"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"futures/task/struct.AtomicTask.html\" title=\"struct futures::task::AtomicTask\">AtomicTask</a>","synthetic":true,"types":["futures::task_impl::atomic_task::AtomicTask"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures/task/struct.UnparkEvent.html\" title=\"struct futures::task::UnparkEvent\">UnparkEvent</a>","synthetic":true,"types":["futures::task_impl::std::UnparkEvent"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/task/struct.LocalKey.html\" title=\"struct futures::task::LocalKey\">LocalKey</a>&lt;T&gt;","synthetic":true,"types":["futures::task_impl::std::data::LocalKey"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/sync/struct.BiLock.html\" title=\"struct futures::sync::BiLock\">BiLock</a>&lt;T&gt;","synthetic":true,"types":["futures::sync::bilock::BiLock"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"futures/sync/struct.BiLockGuard.html\" title=\"struct futures::sync::BiLockGuard\">BiLockGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["futures::sync::bilock::BiLockGuard"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/sync/struct.BiLockAcquire.html\" title=\"struct futures::sync::BiLockAcquire\">BiLockAcquire</a>&lt;T&gt;","synthetic":true,"types":["futures::sync::bilock::BiLockAcquire"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/sync/struct.BiLockAcquired.html\" title=\"struct futures::sync::BiLockAcquired\">BiLockAcquired</a>&lt;T&gt;","synthetic":true,"types":["futures::sync::bilock::BiLockAcquired"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/sync/oneshot/struct.Receiver.html\" title=\"struct futures::sync::oneshot::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["futures::sync::oneshot::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/sync/oneshot/struct.Sender.html\" title=\"struct futures::sync::oneshot::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["futures::sync::oneshot::Sender"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures/sync/oneshot/struct.Canceled.html\" title=\"struct futures::sync::oneshot::Canceled\">Canceled</a>","synthetic":true,"types":["futures::sync::oneshot::Canceled"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"futures/sync/oneshot/struct.SpawnHandle.html\" title=\"struct futures::sync::oneshot::SpawnHandle\">SpawnHandle</a>&lt;T, E&gt;","synthetic":true,"types":["futures::sync::oneshot::SpawnHandle"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures/sync/oneshot/struct.Execute.html\" title=\"struct futures::sync::oneshot::Execute\">Execute</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sync::oneshot::Execute"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/sync/mpsc/struct.Sender.html\" title=\"struct futures::sync::mpsc::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["futures::sync::mpsc::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/sync/mpsc/struct.UnboundedSender.html\" title=\"struct futures::sync::mpsc::UnboundedSender\">UnboundedSender</a>&lt;T&gt;","synthetic":true,"types":["futures::sync::mpsc::UnboundedSender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/sync/mpsc/struct.Receiver.html\" title=\"struct futures::sync::mpsc::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["futures::sync::mpsc::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/sync/mpsc/struct.UnboundedReceiver.html\" title=\"struct futures::sync::mpsc::UnboundedReceiver\">UnboundedReceiver</a>&lt;T&gt;","synthetic":true,"types":["futures::sync::mpsc::UnboundedReceiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/sync/mpsc/struct.SendError.html\" title=\"struct futures::sync::mpsc::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sync::mpsc::SendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/sync/mpsc/struct.TrySendError.html\" title=\"struct futures::sync::mpsc::TrySendError\">TrySendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sync::mpsc::TrySendError"]},{"text":"impl&lt;Item, Error&gt; Freeze for <a class=\"struct\" href=\"futures/sync/mpsc/struct.SpawnHandle.html\" title=\"struct futures::sync::mpsc::SpawnHandle\">SpawnHandle</a>&lt;Item, Error&gt;","synthetic":true,"types":["futures::sync::mpsc::SpawnHandle"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/sync/mpsc/struct.Execute.html\" title=\"struct futures::sync::mpsc::Execute\">Execute</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Error\" title=\"type futures::stream::Stream::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::sync::mpsc::Execute"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/unsync/mpsc/struct.Sender.html\" title=\"struct futures::unsync::mpsc::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["futures::unsync::mpsc::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/unsync/mpsc/struct.Receiver.html\" title=\"struct futures::unsync::mpsc::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["futures::unsync::mpsc::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/unsync/mpsc/struct.UnboundedSender.html\" title=\"struct futures::unsync::mpsc::UnboundedSender\">UnboundedSender</a>&lt;T&gt;","synthetic":true,"types":["futures::unsync::mpsc::UnboundedSender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/unsync/mpsc/struct.UnboundedReceiver.html\" title=\"struct futures::unsync::mpsc::UnboundedReceiver\">UnboundedReceiver</a>&lt;T&gt;","synthetic":true,"types":["futures::unsync::mpsc::UnboundedReceiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/unsync/mpsc/struct.SendError.html\" title=\"struct futures::unsync::mpsc::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::unsync::mpsc::SendError"]},{"text":"impl&lt;Item, Error&gt; Freeze for <a class=\"struct\" href=\"futures/unsync/mpsc/struct.SpawnHandle.html\" title=\"struct futures::unsync::mpsc::SpawnHandle\">SpawnHandle</a>&lt;Item, Error&gt;","synthetic":true,"types":["futures::unsync::mpsc::SpawnHandle"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures/unsync/mpsc/struct.Execute.html\" title=\"struct futures::unsync::mpsc::Execute\">Execute</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Error\" title=\"type futures::stream::Stream::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::unsync::mpsc::Execute"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/unsync/oneshot/struct.Sender.html\" title=\"struct futures::unsync::oneshot::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["futures::unsync::oneshot::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures/unsync/oneshot/struct.Receiver.html\" title=\"struct futures::unsync::oneshot::Receiver\">Receiver</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::unsync::oneshot::Receiver"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"futures/unsync/oneshot/struct.SpawnHandle.html\" title=\"struct futures::unsync::oneshot::SpawnHandle\">SpawnHandle</a>&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::unsync::oneshot::SpawnHandle"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures/unsync/oneshot/struct.Execute.html\" title=\"struct futures::unsync::oneshot::Execute\">Execute</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures::unsync::oneshot::Execute"]}];
implementors["getrandom"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"getrandom/struct.Error.html\" title=\"struct getrandom::Error\">Error</a>","synthetic":true,"types":["getrandom::error::Error"]}];
implementors["grpcio"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio/struct.CallOption.html\" title=\"struct grpcio::CallOption\">CallOption</a>","synthetic":true,"types":["grpcio::call::client::CallOption"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"grpcio/struct.ClientCStreamReceiver.html\" title=\"struct grpcio::ClientCStreamReceiver\">ClientCStreamReceiver</a>&lt;T&gt;","synthetic":true,"types":["grpcio::call::client::ClientCStreamReceiver"]},{"text":"impl&lt;Resp&gt; Freeze for <a class=\"struct\" href=\"grpcio/struct.ClientDuplexReceiver.html\" title=\"struct grpcio::ClientDuplexReceiver\">ClientDuplexReceiver</a>&lt;Resp&gt;","synthetic":true,"types":["grpcio::call::client::ClientDuplexReceiver"]},{"text":"impl&lt;Resp&gt; Freeze for <a class=\"struct\" href=\"grpcio/struct.ClientSStreamReceiver.html\" title=\"struct grpcio::ClientSStreamReceiver\">ClientSStreamReceiver</a>&lt;Resp&gt;","synthetic":true,"types":["grpcio::call::client::ClientSStreamReceiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"grpcio/struct.ClientUnaryReceiver.html\" title=\"struct grpcio::ClientUnaryReceiver\">ClientUnaryReceiver</a>&lt;T&gt;","synthetic":true,"types":["grpcio::call::client::ClientUnaryReceiver"]},{"text":"impl&lt;Req&gt; Freeze for <a class=\"struct\" href=\"grpcio/struct.StreamingCallSink.html\" title=\"struct grpcio::StreamingCallSink\">StreamingCallSink</a>&lt;Req&gt;","synthetic":true,"types":["grpcio::call::client::StreamingCallSink"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"grpcio/struct.ClientStreamingSink.html\" title=\"struct grpcio::ClientStreamingSink\">ClientStreamingSink</a>&lt;T&gt;","synthetic":true,"types":["grpcio::call::server::ClientStreamingSink"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio/struct.ClientStreamingSinkResult.html\" title=\"struct grpcio::ClientStreamingSinkResult\">ClientStreamingSinkResult</a>","synthetic":true,"types":["grpcio::call::server::ClientStreamingSinkResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio/struct.Deadline.html\" title=\"struct grpcio::Deadline\">Deadline</a>","synthetic":true,"types":["grpcio::call::server::Deadline"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"grpcio/struct.DuplexSink.html\" title=\"struct grpcio::DuplexSink\">DuplexSink</a>&lt;T&gt;","synthetic":true,"types":["grpcio::call::server::DuplexSink"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio/struct.DuplexSinkFailure.html\" title=\"struct grpcio::DuplexSinkFailure\">DuplexSinkFailure</a>","synthetic":true,"types":["grpcio::call::server::DuplexSinkFailure"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"grpcio/struct.RequestStream.html\" title=\"struct grpcio::RequestStream\">RequestStream</a>&lt;T&gt;","synthetic":true,"types":["grpcio::call::server::RequestStream"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"grpcio/struct.RpcContext.html\" title=\"struct grpcio::RpcContext\">RpcContext</a>&lt;'a&gt;","synthetic":true,"types":["grpcio::call::server::RpcContext"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"grpcio/struct.ServerStreamingSink.html\" title=\"struct grpcio::ServerStreamingSink\">ServerStreamingSink</a>&lt;T&gt;","synthetic":true,"types":["grpcio::call::server::ServerStreamingSink"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio/struct.ServerStreamingSinkFailure.html\" title=\"struct grpcio::ServerStreamingSinkFailure\">ServerStreamingSinkFailure</a>","synthetic":true,"types":["grpcio::call::server::ServerStreamingSinkFailure"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"grpcio/struct.UnarySink.html\" title=\"struct grpcio::UnarySink\">UnarySink</a>&lt;T&gt;","synthetic":true,"types":["grpcio::call::server::UnarySink"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio/struct.UnarySinkResult.html\" title=\"struct grpcio::UnarySinkResult\">UnarySinkResult</a>","synthetic":true,"types":["grpcio::call::server::UnarySinkResult"]},{"text":"impl&lt;Req, Resp&gt; Freeze for <a class=\"struct\" href=\"grpcio/struct.Method.html\" title=\"struct grpcio::Method\">Method</a>&lt;Req, Resp&gt;","synthetic":true,"types":["grpcio::call::Method"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio/struct.RpcStatus.html\" title=\"struct grpcio::RpcStatus\">RpcStatus</a>","synthetic":true,"types":["grpcio::call::RpcStatus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio/struct.WriteFlags.html\" title=\"struct grpcio::WriteFlags\">WriteFlags</a>","synthetic":true,"types":["grpcio::call::WriteFlags"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio/struct.Channel.html\" title=\"struct grpcio::Channel\">Channel</a>","synthetic":true,"types":["grpcio::channel::Channel"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio/struct.ChannelBuilder.html\" title=\"struct grpcio::ChannelBuilder\">ChannelBuilder</a>","synthetic":true,"types":["grpcio::channel::ChannelBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio/struct.Client.html\" title=\"struct grpcio::Client\">Client</a>","synthetic":true,"types":["grpcio::client::Client"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"grpcio/struct.Marshaller.html\" title=\"struct grpcio::Marshaller\">Marshaller</a>&lt;T&gt;","synthetic":true,"types":["grpcio::codec::Marshaller"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio/struct.ChannelCredentials.html\" title=\"struct grpcio::ChannelCredentials\">ChannelCredentials</a>","synthetic":true,"types":["grpcio::credentials::ChannelCredentials"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio/struct.ChannelCredentialsBuilder.html\" title=\"struct grpcio::ChannelCredentialsBuilder\">ChannelCredentialsBuilder</a>","synthetic":true,"types":["grpcio::credentials::ChannelCredentialsBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio/struct.ServerCredentials.html\" title=\"struct grpcio::ServerCredentials\">ServerCredentials</a>","synthetic":true,"types":["grpcio::credentials::ServerCredentials"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio/struct.ServerCredentialsBuilder.html\" title=\"struct grpcio::ServerCredentialsBuilder\">ServerCredentialsBuilder</a>","synthetic":true,"types":["grpcio::credentials::ServerCredentialsBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio/struct.EnvBuilder.html\" title=\"struct grpcio::EnvBuilder\">EnvBuilder</a>","synthetic":true,"types":["grpcio::env::EnvBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"grpcio/struct.Environment.html\" title=\"struct grpcio::Environment\">Environment</a>","synthetic":true,"types":["grpcio::env::Environment"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio/struct.Metadata.html\" title=\"struct grpcio::Metadata\">Metadata</a>","synthetic":true,"types":["grpcio::metadata::Metadata"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio/struct.MetadataBuilder.html\" title=\"struct grpcio::MetadataBuilder\">MetadataBuilder</a>","synthetic":true,"types":["grpcio::metadata::MetadataBuilder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"grpcio/struct.MetadataIter.html\" title=\"struct grpcio::MetadataIter\">MetadataIter</a>&lt;'a&gt;","synthetic":true,"types":["grpcio::metadata::MetadataIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio/struct.ResourceQuota.html\" title=\"struct grpcio::ResourceQuota\">ResourceQuota</a>","synthetic":true,"types":["grpcio::quota::ResourceQuota"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio/struct.Server.html\" title=\"struct grpcio::Server\">Server</a>","synthetic":true,"types":["grpcio::server::Server"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio/struct.ServerBuilder.html\" title=\"struct grpcio::ServerBuilder\">ServerBuilder</a>","synthetic":true,"types":["grpcio::server::ServerBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio/struct.Service.html\" title=\"struct grpcio::Service\">Service</a>","synthetic":true,"types":["grpcio::server::Service"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio/struct.ServiceBuilder.html\" title=\"struct grpcio::ServiceBuilder\">ServiceBuilder</a>","synthetic":true,"types":["grpcio::server::ServiceBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio/struct.ShutdownFuture.html\" title=\"struct grpcio::ShutdownFuture\">ShutdownFuture</a>","synthetic":true,"types":["grpcio::server::ShutdownFuture"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio/enum.MethodType.html\" title=\"enum grpcio::MethodType\">MethodType</a>","synthetic":true,"types":["grpcio::call::MethodType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio/enum.LbPolicy.html\" title=\"enum grpcio::LbPolicy\">LbPolicy</a>","synthetic":true,"types":["grpcio::channel::LbPolicy"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio/enum.OptTarget.html\" title=\"enum grpcio::OptTarget\">OptTarget</a>","synthetic":true,"types":["grpcio::channel::OptTarget"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio/enum.Error.html\" title=\"enum grpcio::Error\">Error</a>","synthetic":true,"types":["grpcio::error::Error"]}];
implementors["grpcio_sys"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio_sys/struct.GprTimespec.html\" title=\"struct grpcio_sys::GprTimespec\">GprTimespec</a>","synthetic":true,"types":["grpcio_sys::GprTimespec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio_sys/struct.GrpcEvent.html\" title=\"struct grpcio_sys::GrpcEvent\">GrpcEvent</a>","synthetic":true,"types":["grpcio_sys::GrpcEvent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio_sys/struct.GprLogFuncArgs.html\" title=\"struct grpcio_sys::GprLogFuncArgs\">GprLogFuncArgs</a>","synthetic":true,"types":["grpcio_sys::GprLogFuncArgs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"grpcio_sys/struct.GrpcMetadataArray.html\" title=\"struct grpcio_sys::GrpcMetadataArray\">GrpcMetadataArray</a>","synthetic":true,"types":["grpcio_sys::GrpcMetadataArray"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio_sys/enum.GprClockType.html\" title=\"enum grpcio_sys::GprClockType\">GprClockType</a>","synthetic":true,"types":["grpcio_sys::GprClockType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio_sys/enum.GrpcStatusCode.html\" title=\"enum grpcio_sys::GrpcStatusCode\">GrpcStatusCode</a>","synthetic":true,"types":["grpcio_sys::GrpcStatusCode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio_sys/enum.GrpcCallStatus.html\" title=\"enum grpcio_sys::GrpcCallStatus\">GrpcCallStatus</a>","synthetic":true,"types":["grpcio_sys::GrpcCallStatus"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio_sys/enum.GrpcCompletionType.html\" title=\"enum grpcio_sys::GrpcCompletionType\">GrpcCompletionType</a>","synthetic":true,"types":["grpcio_sys::GrpcCompletionType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio_sys/enum.GrpcChannelArgs.html\" title=\"enum grpcio_sys::GrpcChannelArgs\">GrpcChannelArgs</a>","synthetic":true,"types":["grpcio_sys::GrpcChannelArgs"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio_sys/enum.GrpcConnectivityState.html\" title=\"enum grpcio_sys::GrpcConnectivityState\">GrpcConnectivityState</a>","synthetic":true,"types":["grpcio_sys::GrpcConnectivityState"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio_sys/enum.GrpcCompressionLevel.html\" title=\"enum grpcio_sys::GrpcCompressionLevel\">GrpcCompressionLevel</a>","synthetic":true,"types":["grpcio_sys::GrpcCompressionLevel"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio_sys/enum.GrpcCompressionAlgorithms.html\" title=\"enum grpcio_sys::GrpcCompressionAlgorithms\">GrpcCompressionAlgorithms</a>","synthetic":true,"types":["grpcio_sys::GrpcCompressionAlgorithms"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio_sys/enum.GrpcServerRegisterMethodPayloadHandling.html\" title=\"enum grpcio_sys::GrpcServerRegisterMethodPayloadHandling\">GrpcServerRegisterMethodPayloadHandling</a>","synthetic":true,"types":["grpcio_sys::GrpcServerRegisterMethodPayloadHandling"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio_sys/enum.GprLogSeverity.html\" title=\"enum grpcio_sys::GprLogSeverity\">GprLogSeverity</a>","synthetic":true,"types":["grpcio_sys::GprLogSeverity"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio_sys/enum.GrpcMetadata.html\" title=\"enum grpcio_sys::GrpcMetadata\">GrpcMetadata</a>","synthetic":true,"types":["grpcio_sys::GrpcMetadata"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio_sys/enum.GrpcSlice.html\" title=\"enum grpcio_sys::GrpcSlice\">GrpcSlice</a>","synthetic":true,"types":["grpcio_sys::GrpcSlice"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio_sys/enum.GrpcCallDetails.html\" title=\"enum grpcio_sys::GrpcCallDetails\">GrpcCallDetails</a>","synthetic":true,"types":["grpcio_sys::GrpcCallDetails"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio_sys/enum.GrpcCompletionQueue.html\" title=\"enum grpcio_sys::GrpcCompletionQueue\">GrpcCompletionQueue</a>","synthetic":true,"types":["grpcio_sys::GrpcCompletionQueue"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio_sys/enum.GrpcChannel.html\" title=\"enum grpcio_sys::GrpcChannel\">GrpcChannel</a>","synthetic":true,"types":["grpcio_sys::GrpcChannel"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio_sys/enum.GrpcCall.html\" title=\"enum grpcio_sys::GrpcCall\">GrpcCall</a>","synthetic":true,"types":["grpcio_sys::GrpcCall"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio_sys/enum.GrpcByteBuffer.html\" title=\"enum grpcio_sys::GrpcByteBuffer\">GrpcByteBuffer</a>","synthetic":true,"types":["grpcio_sys::GrpcByteBuffer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio_sys/enum.GrpcBatchContext.html\" title=\"enum grpcio_sys::GrpcBatchContext\">GrpcBatchContext</a>","synthetic":true,"types":["grpcio_sys::GrpcBatchContext"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio_sys/enum.GrpcServer.html\" title=\"enum grpcio_sys::GrpcServer\">GrpcServer</a>","synthetic":true,"types":["grpcio_sys::GrpcServer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio_sys/enum.GrpcRequestCallContext.html\" title=\"enum grpcio_sys::GrpcRequestCallContext\">GrpcRequestCallContext</a>","synthetic":true,"types":["grpcio_sys::GrpcRequestCallContext"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio_sys/enum.GrpcResourceQuota.html\" title=\"enum grpcio_sys::GrpcResourceQuota\">GrpcResourceQuota</a>","synthetic":true,"types":["grpcio_sys::GrpcResourceQuota"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio_sys/enum.GrpcArgPointerVtable.html\" title=\"enum grpcio_sys::GrpcArgPointerVtable\">GrpcArgPointerVtable</a>","synthetic":true,"types":["grpcio_sys::GrpcArgPointerVtable"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio_sys/enum.GrpcChannelCredentials.html\" title=\"enum grpcio_sys::GrpcChannelCredentials\">GrpcChannelCredentials</a>","synthetic":true,"types":["grpcio_sys::secure_component::GrpcChannelCredentials"]},{"text":"impl Freeze for <a class=\"enum\" href=\"grpcio_sys/enum.GrpcServerCredentials.html\" title=\"enum grpcio_sys::GrpcServerCredentials\">GrpcServerCredentials</a>","synthetic":true,"types":["grpcio_sys::secure_component::GrpcServerCredentials"]}];
implementors["hex"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"hex/enum.FromHexError.html\" title=\"enum hex::FromHexError\">FromHexError</a>","synthetic":true,"types":["hex::error::FromHexError"]}];
implementors["iovec"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"iovec/struct.IoVec.html\" title=\"struct iovec::IoVec\">IoVec</a>","synthetic":true,"types":["iovec::IoVec"]}];
implementors["libc"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.group.html\" title=\"struct libc::group\">group</a>","synthetic":true,"types":["libc::unix::group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utimbuf.html\" title=\"struct libc::utimbuf\">utimbuf</a>","synthetic":true,"types":["libc::unix::utimbuf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timeval.html\" title=\"struct libc::timeval\">timeval</a>","synthetic":true,"types":["libc::unix::timeval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timespec.html\" title=\"struct libc::timespec\">timespec</a>","synthetic":true,"types":["libc::unix::timespec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rlimit.html\" title=\"struct libc::rlimit\">rlimit</a>","synthetic":true,"types":["libc::unix::rlimit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rusage.html\" title=\"struct libc::rusage\">rusage</a>","synthetic":true,"types":["libc::unix::rusage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ipv6_mreq.html\" title=\"struct libc::ipv6_mreq\">ipv6_mreq</a>","synthetic":true,"types":["libc::unix::ipv6_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.hostent.html\" title=\"struct libc::hostent\">hostent</a>","synthetic":true,"types":["libc::unix::hostent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.iovec.html\" title=\"struct libc::iovec\">iovec</a>","synthetic":true,"types":["libc::unix::iovec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pollfd.html\" title=\"struct libc::pollfd\">pollfd</a>","synthetic":true,"types":["libc::unix::pollfd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.winsize.html\" title=\"struct libc::winsize\">winsize</a>","synthetic":true,"types":["libc::unix::winsize"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.linger.html\" title=\"struct libc::linger\">linger</a>","synthetic":true,"types":["libc::unix::linger"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigval.html\" title=\"struct libc::sigval\">sigval</a>","synthetic":true,"types":["libc::unix::sigval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.itimerval.html\" title=\"struct libc::itimerval\">itimerval</a>","synthetic":true,"types":["libc::unix::itimerval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.tms.html\" title=\"struct libc::tms\">tms</a>","synthetic":true,"types":["libc::unix::tms"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.servent.html\" title=\"struct libc::servent\">servent</a>","synthetic":true,"types":["libc::unix::servent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.protoent.html\" title=\"struct libc::protoent\">protoent</a>","synthetic":true,"types":["libc::unix::protoent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in_addr.html\" title=\"struct libc::in_addr\">in_addr</a>","synthetic":true,"types":["libc::unix::linux_like::in_addr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreq.html\" title=\"struct libc::ip_mreq\">ip_mreq</a>","synthetic":true,"types":["libc::unix::linux_like::ip_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreq_source.html\" title=\"struct libc::ip_mreq_source\">ip_mreq_source</a>","synthetic":true,"types":["libc::unix::linux_like::ip_mreq_source"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr.html\" title=\"struct libc::sockaddr\">sockaddr</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_in.html\" title=\"struct libc::sockaddr_in\">sockaddr_in</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_in"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_in6.html\" title=\"struct libc::sockaddr_in6\">sockaddr_in6</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_in6"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.addrinfo.html\" title=\"struct libc::addrinfo\">addrinfo</a>","synthetic":true,"types":["libc::unix::linux_like::addrinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_ll.html\" title=\"struct libc::sockaddr_ll\">sockaddr_ll</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_ll"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fd_set.html\" title=\"struct libc::fd_set\">fd_set</a>","synthetic":true,"types":["libc::unix::linux_like::fd_set"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.tm.html\" title=\"struct libc::tm\">tm</a>","synthetic":true,"types":["libc::unix::linux_like::tm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sched_param.html\" title=\"struct libc::sched_param\">sched_param</a>","synthetic":true,"types":["libc::unix::linux_like::sched_param"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Dl_info.html\" title=\"struct libc::Dl_info\">Dl_info</a>","synthetic":true,"types":["libc::unix::linux_like::Dl_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.lconv.html\" title=\"struct libc::lconv\">lconv</a>","synthetic":true,"types":["libc::unix::linux_like::lconv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in_pktinfo.html\" title=\"struct libc::in_pktinfo\">in_pktinfo</a>","synthetic":true,"types":["libc::unix::linux_like::in_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ifaddrs.html\" title=\"struct libc::ifaddrs\">ifaddrs</a>","synthetic":true,"types":["libc::unix::linux_like::ifaddrs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_rtmsg.html\" title=\"struct libc::in6_rtmsg\">in6_rtmsg</a>","synthetic":true,"types":["libc::unix::linux_like::in6_rtmsg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arpreq.html\" title=\"struct libc::arpreq\">arpreq</a>","synthetic":true,"types":["libc::unix::linux_like::arpreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arpreq_old.html\" title=\"struct libc::arpreq_old\">arpreq_old</a>","synthetic":true,"types":["libc::unix::linux_like::arpreq_old"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arphdr.html\" title=\"struct libc::arphdr\">arphdr</a>","synthetic":true,"types":["libc::unix::linux_like::arphdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mmsghdr.html\" title=\"struct libc::mmsghdr\">mmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::mmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sock_extended_err.html\" title=\"struct libc::sock_extended_err\">sock_extended_err</a>","synthetic":true,"types":["libc::unix::linux_like::sock_extended_err"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.epoll_event.html\" title=\"struct libc::epoll_event\">epoll_event</a>","synthetic":true,"types":["libc::unix::linux_like::epoll_event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_un.html\" title=\"struct libc::sockaddr_un\">sockaddr_un</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_un"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_storage.html\" title=\"struct libc::sockaddr_storage\">sockaddr_storage</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_storage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utsname.html\" title=\"struct libc::utsname\">utsname</a>","synthetic":true,"types":["libc::unix::linux_like::utsname"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigevent.html\" title=\"struct libc::sigevent\">sigevent</a>","synthetic":true,"types":["libc::unix::linux_like::sigevent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rlimit64.html\" title=\"struct libc::rlimit64\">rlimit64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::rlimit64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.glob_t.html\" title=\"struct libc::glob_t\">glob_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::glob_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.passwd.html\" title=\"struct libc::passwd\">passwd</a>","synthetic":true,"types":["libc::unix::linux_like::linux::passwd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.spwd.html\" title=\"struct libc::spwd\">spwd</a>","synthetic":true,"types":["libc::unix::linux_like::linux::spwd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dqblk.html\" title=\"struct libc::dqblk\">dqblk</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dqblk"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.signalfd_siginfo.html\" title=\"struct libc::signalfd_siginfo\">signalfd_siginfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::signalfd_siginfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.itimerspec.html\" title=\"struct libc::itimerspec\">itimerspec</a>","synthetic":true,"types":["libc::unix::linux_like::linux::itimerspec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fsid_t.html\" title=\"struct libc::fsid_t\">fsid_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fsid_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.packet_mreq.html\" title=\"struct libc::packet_mreq\">packet_mreq</a>","synthetic":true,"types":["libc::unix::linux_like::linux::packet_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.cpu_set_t.html\" title=\"struct libc::cpu_set_t\">cpu_set_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::cpu_set_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.if_nameindex.html\" title=\"struct libc::if_nameindex\">if_nameindex</a>","synthetic":true,"types":["libc::unix::linux_like::linux::if_nameindex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.msginfo.html\" title=\"struct libc::msginfo\">msginfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::msginfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sembuf.html\" title=\"struct libc::sembuf\">sembuf</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sembuf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_event.html\" title=\"struct libc::input_event\">input_event</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_id.html\" title=\"struct libc::input_id\">input_id</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_id"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_absinfo.html\" title=\"struct libc::input_absinfo\">input_absinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_absinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_keymap_entry.html\" title=\"struct libc::input_keymap_entry\">input_keymap_entry</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_keymap_entry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_mask.html\" title=\"struct libc::input_mask\">input_mask</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_mask"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_replay.html\" title=\"struct libc::ff_replay\">ff_replay</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_replay"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_trigger.html\" title=\"struct libc::ff_trigger\">ff_trigger</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_trigger"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_envelope.html\" title=\"struct libc::ff_envelope\">ff_envelope</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_envelope"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_constant_effect.html\" title=\"struct libc::ff_constant_effect\">ff_constant_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_constant_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_ramp_effect.html\" title=\"struct libc::ff_ramp_effect\">ff_ramp_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_ramp_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_condition_effect.html\" title=\"struct libc::ff_condition_effect\">ff_condition_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_condition_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_periodic_effect.html\" title=\"struct libc::ff_periodic_effect\">ff_periodic_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_periodic_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_rumble_effect.html\" title=\"struct libc::ff_rumble_effect\">ff_rumble_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_rumble_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_effect.html\" title=\"struct libc::ff_effect\">ff_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dl_phdr_info.html\" title=\"struct libc::dl_phdr_info\">dl_phdr_info</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dl_phdr_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Ehdr.html\" title=\"struct libc::Elf32_Ehdr\">Elf32_Ehdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Ehdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Ehdr.html\" title=\"struct libc::Elf64_Ehdr\">Elf64_Ehdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Ehdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Sym.html\" title=\"struct libc::Elf32_Sym\">Elf32_Sym</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Sym"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Sym.html\" title=\"struct libc::Elf64_Sym\">Elf64_Sym</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Sym"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Phdr.html\" title=\"struct libc::Elf32_Phdr\">Elf32_Phdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Phdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Phdr.html\" title=\"struct libc::Elf64_Phdr\">Elf64_Phdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Phdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Shdr.html\" title=\"struct libc::Elf32_Shdr\">Elf32_Shdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Shdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Shdr.html\" title=\"struct libc::Elf64_Shdr\">Elf64_Shdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Shdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Chdr.html\" title=\"struct libc::Elf32_Chdr\">Elf32_Chdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Chdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Chdr.html\" title=\"struct libc::Elf64_Chdr\">Elf64_Chdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Chdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ucred.html\" title=\"struct libc::ucred\">ucred</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ucred"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mntent.html\" title=\"struct libc::mntent\">mntent</a>","synthetic":true,"types":["libc::unix::linux_like::linux::mntent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.posix_spawn_file_actions_t.html\" title=\"struct libc::posix_spawn_file_actions_t\">posix_spawn_file_actions_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::posix_spawn_file_actions_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.posix_spawnattr_t.html\" title=\"struct libc::posix_spawnattr_t\">posix_spawnattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::posix_spawnattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.genlmsghdr.html\" title=\"struct libc::genlmsghdr\">genlmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::genlmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_pktinfo.html\" title=\"struct libc::in6_pktinfo\">in6_pktinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::in6_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arpd_request.html\" title=\"struct libc::arpd_request\">arpd_request</a>","synthetic":true,"types":["libc::unix::linux_like::linux::arpd_request"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.inotify_event.html\" title=\"struct libc::inotify_event\">inotify_event</a>","synthetic":true,"types":["libc::unix::linux_like::linux::inotify_event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_vm.html\" title=\"struct libc::sockaddr_vm\">sockaddr_vm</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_vm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_nl.html\" title=\"struct libc::sockaddr_nl\">sockaddr_nl</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_nl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dirent.html\" title=\"struct libc::dirent\">dirent</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dirent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dirent64.html\" title=\"struct libc::dirent64\">dirent64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dirent64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_alg.html\" title=\"struct libc::sockaddr_alg\">sockaddr_alg</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_alg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.af_alg_iv.html\" title=\"struct libc::af_alg_iv\">af_alg_iv</a>","synthetic":true,"types":["libc::unix::linux_like::linux::af_alg_iv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mq_attr.html\" title=\"struct libc::mq_attr\">mq_attr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::mq_attr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statx.html\" title=\"struct libc::statx\">statx</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::statx"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statx_timestamp.html\" title=\"struct libc::statx_timestamp\">statx_timestamp</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::statx_timestamp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.aiocb.html\" title=\"struct libc::aiocb\">aiocb</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::aiocb"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__exit_status.html\" title=\"struct libc::__exit_status\">__exit_status</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__exit_status"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__timeval.html\" title=\"struct libc::__timeval\">__timeval</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__timeval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.glob64_t.html\" title=\"struct libc::glob64_t\">glob64_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::glob64_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.msghdr.html\" title=\"struct libc::msghdr\">msghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::msghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.cmsghdr.html\" title=\"struct libc::cmsghdr\">cmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::cmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.termios.html\" title=\"struct libc::termios\">termios</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::termios"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mallinfo.html\" title=\"struct libc::mallinfo\">mallinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::mallinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nlmsghdr.html\" title=\"struct libc::nlmsghdr\">nlmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nlmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nlmsgerr.html\" title=\"struct libc::nlmsgerr\">nlmsgerr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nlmsgerr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nl_pktinfo.html\" title=\"struct libc::nl_pktinfo\">nl_pktinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nl_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nl_mmap_req.html\" title=\"struct libc::nl_mmap_req\">nl_mmap_req</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nl_mmap_req"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nl_mmap_hdr.html\" title=\"struct libc::nl_mmap_hdr\">nl_mmap_hdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nl_mmap_hdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nlattr.html\" title=\"struct libc::nlattr\">nlattr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nlattr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rtentry.html\" title=\"struct libc::rtentry\">rtentry</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::rtentry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utmpx.html\" title=\"struct libc::utmpx\">utmpx</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::utmpx"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigset_t.html\" title=\"struct libc::sigset_t\">sigset_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::sigset_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sysinfo.html\" title=\"struct libc::sysinfo\">sysinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::sysinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.msqid_ds.html\" title=\"struct libc::msqid_ds\">msqid_ds</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::msqid_ds"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigaction.html\" title=\"struct libc::sigaction\">sigaction</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::sigaction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statfs.html\" title=\"struct libc::statfs\">statfs</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::statfs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.flock.html\" title=\"struct libc::flock\">flock</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::flock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.flock64.html\" title=\"struct libc::flock64\">flock64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::flock64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.siginfo_t.html\" title=\"struct libc::siginfo_t\">siginfo_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::siginfo_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stack_t.html\" title=\"struct libc::stack_t\">stack_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::stack_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stat.html\" title=\"struct libc::stat\">stat</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::stat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stat64.html\" title=\"struct libc::stat64\">stat64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::stat64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statfs64.html\" title=\"struct libc::statfs64\">statfs64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::statfs64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statvfs64.html\" title=\"struct libc::statvfs64\">statvfs64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::statvfs64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_attr_t.html\" title=\"struct libc::pthread_attr_t\">pthread_attr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::pthread_attr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct._libc_fpxreg.html\" title=\"struct libc::_libc_fpxreg\">_libc_fpxreg</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::_libc_fpxreg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct._libc_xmmreg.html\" title=\"struct libc::_libc_xmmreg\">_libc_xmmreg</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::_libc_xmmreg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct._libc_fpstate.html\" title=\"struct libc::_libc_fpstate\">_libc_fpstate</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::_libc_fpstate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.user_regs_struct.html\" title=\"struct libc::user_regs_struct\">user_regs_struct</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::user_regs_struct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.user.html\" title=\"struct libc::user\">user</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::user"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mcontext_t.html\" title=\"struct libc::mcontext_t\">mcontext_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::mcontext_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ipc_perm.html\" title=\"struct libc::ipc_perm\">ipc_perm</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::ipc_perm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.shmid_ds.html\" title=\"struct libc::shmid_ds\">shmid_ds</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::shmid_ds"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.termios2.html\" title=\"struct libc::termios2\">termios2</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::termios2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreqn.html\" title=\"struct libc::ip_mreqn\">ip_mreqn</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::ip_mreqn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.user_fpregs_struct.html\" title=\"struct libc::user_fpregs_struct\">user_fpregs_struct</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::user_fpregs_struct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ucontext_t.html\" title=\"struct libc::ucontext_t\">ucontext_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::ucontext_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statvfs.html\" title=\"struct libc::statvfs\">statvfs</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::not_x32::statvfs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.max_align_t.html\" title=\"struct libc::max_align_t\">max_align_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::align::max_align_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sem_t.html\" title=\"struct libc::sem_t\">sem_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::align::sem_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_mutexattr_t.html\" title=\"struct libc::pthread_mutexattr_t\">pthread_mutexattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_mutexattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_rwlockattr_t.html\" title=\"struct libc::pthread_rwlockattr_t\">pthread_rwlockattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_rwlockattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_condattr_t.html\" title=\"struct libc::pthread_condattr_t\">pthread_condattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_condattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_cond_t.html\" title=\"struct libc::pthread_cond_t\">pthread_cond_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_cond_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_mutex_t.html\" title=\"struct libc::pthread_mutex_t\">pthread_mutex_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_mutex_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_rwlock_t.html\" title=\"struct libc::pthread_rwlock_t\">pthread_rwlock_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_rwlock_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_addr.html\" title=\"struct libc::in6_addr\">in6_addr</a>","synthetic":true,"types":["libc::unix::align::in6_addr"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.DIR.html\" title=\"enum libc::DIR\">DIR</a>","synthetic":true,"types":["libc::unix::DIR"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.FILE.html\" title=\"enum libc::FILE\">FILE</a>","synthetic":true,"types":["libc::unix::FILE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.fpos_t.html\" title=\"enum libc::fpos_t\">fpos_t</a>","synthetic":true,"types":["libc::unix::fpos_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.timezone.html\" title=\"enum libc::timezone\">timezone</a>","synthetic":true,"types":["libc::unix::linux_like::timezone"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.fpos64_t.html\" title=\"enum libc::fpos64_t\">fpos64_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fpos64_t"]}];
implementors["lock_api"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"lock_api/struct.GuardSend.html\" title=\"struct lock_api::GuardSend\">GuardSend</a>","synthetic":true,"types":["lock_api::GuardSend"]},{"text":"impl Freeze for <a class=\"struct\" href=\"lock_api/struct.GuardNoSend.html\" title=\"struct lock_api::GuardNoSend\">GuardNoSend</a>","synthetic":true,"types":["lock_api::GuardNoSend"]},{"text":"impl&lt;R, T&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.Mutex.html\" title=\"struct lock_api::Mutex\">Mutex</a>&lt;R, T&gt;","synthetic":true,"types":["lock_api::mutex::Mutex"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MutexGuard.html\" title=\"struct lock_api::MutexGuard\">MutexGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::mutex::MutexGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedMutexGuard.html\" title=\"struct lock_api::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::mutex::MappedMutexGuard"]},{"text":"impl&lt;R, G, T&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.ReentrantMutex.html\" title=\"struct lock_api::ReentrantMutex\">ReentrantMutex</a>&lt;R, G, T&gt;","synthetic":true,"types":["lock_api::remutex::ReentrantMutex"]},{"text":"impl&lt;'a, R, G, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.ReentrantMutexGuard.html\" title=\"struct lock_api::ReentrantMutexGuard\">ReentrantMutexGuard</a>&lt;'a, R, G, T&gt;","synthetic":true,"types":["lock_api::remutex::ReentrantMutexGuard"]},{"text":"impl&lt;'a, R, G, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedReentrantMutexGuard.html\" title=\"struct lock_api::MappedReentrantMutexGuard\">MappedReentrantMutexGuard</a>&lt;'a, R, G, T&gt;","synthetic":true,"types":["lock_api::remutex::MappedReentrantMutexGuard"]},{"text":"impl&lt;R, T&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLock.html\" title=\"struct lock_api::RwLock\">RwLock</a>&lt;R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLock"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLockReadGuard.html\" title=\"struct lock_api::RwLockReadGuard\">RwLockReadGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLockReadGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLockWriteGuard.html\" title=\"struct lock_api::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLockWriteGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLockUpgradableReadGuard.html\" title=\"struct lock_api::RwLockUpgradableReadGuard\">RwLockUpgradableReadGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLockUpgradableReadGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedRwLockReadGuard.html\" title=\"struct lock_api::MappedRwLockReadGuard\">MappedRwLockReadGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::MappedRwLockReadGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedRwLockWriteGuard.html\" title=\"struct lock_api::MappedRwLockWriteGuard\">MappedRwLockWriteGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::MappedRwLockWriteGuard"]}];
implementors["log"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.Record.html\" title=\"struct log::Record\">Record</a>&lt;'a&gt;","synthetic":true,"types":["log::Record"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.RecordBuilder.html\" title=\"struct log::RecordBuilder\">RecordBuilder</a>&lt;'a&gt;","synthetic":true,"types":["log::RecordBuilder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.Metadata.html\" title=\"struct log::Metadata\">Metadata</a>&lt;'a&gt;","synthetic":true,"types":["log::Metadata"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.MetadataBuilder.html\" title=\"struct log::MetadataBuilder\">MetadataBuilder</a>&lt;'a&gt;","synthetic":true,"types":["log::MetadataBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"log/struct.SetLoggerError.html\" title=\"struct log::SetLoggerError\">SetLoggerError</a>","synthetic":true,"types":["log::SetLoggerError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"log/struct.ParseLevelError.html\" title=\"struct log::ParseLevelError\">ParseLevelError</a>","synthetic":true,"types":["log::ParseLevelError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"log/enum.Level.html\" title=\"enum log::Level\">Level</a>","synthetic":true,"types":["log::Level"]},{"text":"impl Freeze for <a class=\"enum\" href=\"log/enum.LevelFilter.html\" title=\"enum log::LevelFilter\">LevelFilter</a>","synthetic":true,"types":["log::LevelFilter"]}];
implementors["mio"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/struct.Poll.html\" title=\"struct mio::Poll\">Poll</a>","synthetic":true,"types":["mio::poll::Poll"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/struct.Registration.html\" title=\"struct mio::Registration\">Registration</a>","synthetic":true,"types":["mio::poll::Registration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/struct.SetReadiness.html\" title=\"struct mio::SetReadiness\">SetReadiness</a>","synthetic":true,"types":["mio::poll::SetReadiness"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/struct.PollOpt.html\" title=\"struct mio::PollOpt\">PollOpt</a>","synthetic":true,"types":["mio::event_imp::PollOpt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/struct.Ready.html\" title=\"struct mio::Ready\">Ready</a>","synthetic":true,"types":["mio::event_imp::Ready"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/struct.Token.html\" title=\"struct mio::Token\">Token</a>","synthetic":true,"types":["mio::token::Token"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/struct.Events.html\" title=\"struct mio::Events\">Events</a>","synthetic":true,"types":["mio::poll::Events"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/event/struct.Event.html\" title=\"struct mio::event::Event\">Event</a>","synthetic":true,"types":["mio::event_imp::Event"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mio/event/struct.Iter.html\" title=\"struct mio::event::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["mio::poll::Iter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mio/unix/struct.EventedFd.html\" title=\"struct mio::unix::EventedFd\">EventedFd</a>&lt;'a&gt;","synthetic":true,"types":["mio::sys::unix::eventedfd::EventedFd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/unix/struct.UnixReady.html\" title=\"struct mio::unix::UnixReady\">UnixReady</a>","synthetic":true,"types":["mio::sys::unix::ready::UnixReady"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.TcpListener.html\" title=\"struct mio::net::TcpListener\">TcpListener</a>","synthetic":true,"types":["mio::net::tcp::TcpListener"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.TcpStream.html\" title=\"struct mio::net::TcpStream\">TcpStream</a>","synthetic":true,"types":["mio::net::tcp::TcpStream"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.UdpSocket.html\" title=\"struct mio::net::UdpSocket\">UdpSocket</a>","synthetic":true,"types":["mio::net::udp::UdpSocket"]}];
implementors["mio_uds"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"mio_uds/struct.UnixStream.html\" title=\"struct mio_uds::UnixStream\">UnixStream</a>","synthetic":true,"types":["mio_uds::stream::UnixStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio_uds/struct.UnixListener.html\" title=\"struct mio_uds::UnixListener\">UnixListener</a>","synthetic":true,"types":["mio_uds::listener::UnixListener"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio_uds/struct.UnixDatagram.html\" title=\"struct mio_uds::UnixDatagram\">UnixDatagram</a>","synthetic":true,"types":["mio_uds::datagram::UnixDatagram"]}];
implementors["net2"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"net2/struct.TcpBuilder.html\" title=\"struct net2::TcpBuilder\">TcpBuilder</a>","synthetic":true,"types":["net2::tcp::TcpBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"net2/struct.UdpBuilder.html\" title=\"struct net2::UdpBuilder\">UdpBuilder</a>","synthetic":true,"types":["net2::udp::UdpBuilder"]}];
implementors["opentelemetry"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/api/core/struct.Key.html\" title=\"struct opentelemetry::api::core::Key\">Key</a>","synthetic":true,"types":["opentelemetry::api::core::Key"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/api/core/struct.KeyValue.html\" title=\"struct opentelemetry::api::core::KeyValue\">KeyValue</a>","synthetic":true,"types":["opentelemetry::api::core::KeyValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/api/core/struct.Unit.html\" title=\"struct opentelemetry::api::core::Unit\">Unit</a>","synthetic":true,"types":["opentelemetry::api::core::Unit"]},{"text":"impl Freeze for <a class=\"enum\" href=\"opentelemetry/api/core/enum.Value.html\" title=\"enum opentelemetry::api::core::Value\">Value</a>","synthetic":true,"types":["opentelemetry::api::core::Value"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/api/metrics/struct.MetricOptions.html\" title=\"struct opentelemetry::api::metrics::MetricOptions\">MetricOptions</a>","synthetic":true,"types":["opentelemetry::api::metrics::MetricOptions"]},{"text":"impl&lt;LS&gt; !Freeze for <a class=\"struct\" href=\"opentelemetry/api/metrics/struct.Measurement.html\" title=\"struct opentelemetry::api::metrics::Measurement\">Measurement</a>&lt;LS&gt;","synthetic":true,"types":["opentelemetry::api::metrics::Measurement"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/api/metrics/noop/struct.NoopMeter.html\" title=\"struct opentelemetry::api::metrics::noop::NoopMeter\">NoopMeter</a>","synthetic":true,"types":["opentelemetry::api::metrics::noop::NoopMeter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/api/metrics/noop/struct.NoopLabelSet.html\" title=\"struct opentelemetry::api::metrics::noop::NoopLabelSet\">NoopLabelSet</a>","synthetic":true,"types":["opentelemetry::api::metrics::noop::NoopLabelSet"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"opentelemetry/api/metrics/noop/struct.NoopHandle.html\" title=\"struct opentelemetry::api::metrics::noop::NoopHandle\">NoopHandle</a>&lt;T&gt;","synthetic":true,"types":["opentelemetry::api::metrics::noop::NoopHandle"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"opentelemetry/api/metrics/noop/struct.NoopCounter.html\" title=\"struct opentelemetry::api::metrics::noop::NoopCounter\">NoopCounter</a>&lt;T&gt;","synthetic":true,"types":["opentelemetry::api::metrics::noop::NoopCounter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"opentelemetry/api/metrics/noop/struct.NoopGauge.html\" title=\"struct opentelemetry::api::metrics::noop::NoopGauge\">NoopGauge</a>&lt;T&gt;","synthetic":true,"types":["opentelemetry::api::metrics::noop::NoopGauge"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"opentelemetry/api/metrics/noop/struct.NoopMeasure.html\" title=\"struct opentelemetry::api::metrics::noop::NoopMeasure\">NoopMeasure</a>&lt;T&gt;","synthetic":true,"types":["opentelemetry::api::metrics::noop::NoopMeasure"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"opentelemetry/api/metrics/value/struct.MeasurementValue.html\" title=\"struct opentelemetry::api::metrics::value::MeasurementValue\">MeasurementValue</a>","synthetic":true,"types":["opentelemetry::api::metrics::value::MeasurementValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/api/propagation/binary_propagator/struct.BinaryPropagator.html\" title=\"struct opentelemetry::api::propagation::binary_propagator::BinaryPropagator\">BinaryPropagator</a>","synthetic":true,"types":["opentelemetry::api::propagation::binary_propagator::BinaryPropagator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/api/propagation/noop/struct.NoopTextFormat.html\" title=\"struct opentelemetry::api::propagation::noop::NoopTextFormat\">NoopTextFormat</a>","synthetic":true,"types":["opentelemetry::api::propagation::noop::NoopTextFormat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/api/propagation/noop/struct.NoopBinaryFormat.html\" title=\"struct opentelemetry::api::propagation::noop::NoopBinaryFormat\">NoopBinaryFormat</a>","synthetic":true,"types":["opentelemetry::api::propagation::noop::NoopBinaryFormat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/api/trace/b3_propagator/struct.B3Propagator.html\" title=\"struct opentelemetry::api::trace::b3_propagator::B3Propagator\">B3Propagator</a>","synthetic":true,"types":["opentelemetry::api::trace::b3_propagator::B3Propagator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/api/trace/event/struct.Event.html\" title=\"struct opentelemetry::api::trace::event::Event\">Event</a>","synthetic":true,"types":["opentelemetry::api::trace::event::Event"]},{"text":"impl&lt;F, S&gt; Freeze for <a class=\"struct\" href=\"opentelemetry/api/trace/futures/struct.Instrumented.html\" title=\"struct opentelemetry::api::trace::futures::Instrumented\">Instrumented</a>&lt;F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["opentelemetry::api::trace::futures::Instrumented"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/api/trace/link/struct.Link.html\" title=\"struct opentelemetry::api::trace::link::Link\">Link</a>","synthetic":true,"types":["opentelemetry::api::trace::link::Link"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/api/trace/noop/struct.NoopProvider.html\" title=\"struct opentelemetry::api::trace::noop::NoopProvider\">NoopProvider</a>","synthetic":true,"types":["opentelemetry::api::trace::noop::NoopProvider"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/api/trace/noop/struct.NoopSpan.html\" title=\"struct opentelemetry::api::trace::noop::NoopSpan\">NoopSpan</a>","synthetic":true,"types":["opentelemetry::api::trace::noop::NoopSpan"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/api/trace/noop/struct.NoopTracer.html\" title=\"struct opentelemetry::api::trace::noop::NoopTracer\">NoopTracer</a>","synthetic":true,"types":["opentelemetry::api::trace::noop::NoopTracer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/api/trace/sampler/struct.SamplingResult.html\" title=\"struct opentelemetry::api::trace::sampler::SamplingResult\">SamplingResult</a>","synthetic":true,"types":["opentelemetry::api::trace::sampler::SamplingResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"opentelemetry/api/trace/sampler/enum.SamplingDecision.html\" title=\"enum opentelemetry::api::trace::sampler::SamplingDecision\">SamplingDecision</a>","synthetic":true,"types":["opentelemetry::api::trace::sampler::SamplingDecision"]},{"text":"impl Freeze for <a class=\"enum\" href=\"opentelemetry/api/trace/span/enum.SpanKind.html\" title=\"enum opentelemetry::api::trace::span::SpanKind\">SpanKind</a>","synthetic":true,"types":["opentelemetry::api::trace::span::SpanKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"opentelemetry/api/trace/span/enum.SpanStatus.html\" title=\"enum opentelemetry::api::trace::span::SpanStatus\">SpanStatus</a>","synthetic":true,"types":["opentelemetry::api::trace::span::SpanStatus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/api/trace/span_context/struct.SpanContext.html\" title=\"struct opentelemetry::api::trace::span_context::SpanContext\">SpanContext</a>","synthetic":true,"types":["opentelemetry::api::trace::span_context::SpanContext"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/api/trace/trace_context_propagator/struct.TraceContextPropagator.html\" title=\"struct opentelemetry::api::trace::trace_context_propagator::TraceContextPropagator\">TraceContextPropagator</a>","synthetic":true,"types":["opentelemetry::api::trace::trace_context_propagator::TraceContextPropagator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/exporter/metrics/prometheus/struct.IntCounterHandle.html\" title=\"struct opentelemetry::exporter::metrics::prometheus::IntCounterHandle\">IntCounterHandle</a>","synthetic":true,"types":["opentelemetry::exporter::metrics::prometheus::IntCounterHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/exporter/metrics/prometheus/struct.CounterHandle.html\" title=\"struct opentelemetry::exporter::metrics::prometheus::CounterHandle\">CounterHandle</a>","synthetic":true,"types":["opentelemetry::exporter::metrics::prometheus::CounterHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/exporter/metrics/prometheus/struct.IntGaugeHandle.html\" title=\"struct opentelemetry::exporter::metrics::prometheus::IntGaugeHandle\">IntGaugeHandle</a>","synthetic":true,"types":["opentelemetry::exporter::metrics::prometheus::IntGaugeHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/exporter/metrics/prometheus/struct.GaugeHandle.html\" title=\"struct opentelemetry::exporter::metrics::prometheus::GaugeHandle\">GaugeHandle</a>","synthetic":true,"types":["opentelemetry::exporter::metrics::prometheus::GaugeHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/exporter/metrics/prometheus/struct.IntMeasureHandle.html\" title=\"struct opentelemetry::exporter::metrics::prometheus::IntMeasureHandle\">IntMeasureHandle</a>","synthetic":true,"types":["opentelemetry::exporter::metrics::prometheus::IntMeasureHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/exporter/metrics/prometheus/struct.IntMeasure.html\" title=\"struct opentelemetry::exporter::metrics::prometheus::IntMeasure\">IntMeasure</a>","synthetic":true,"types":["opentelemetry::exporter::metrics::prometheus::IntMeasure"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/exporter/metrics/prometheus/struct.MeasureHandle.html\" title=\"struct opentelemetry::exporter::metrics::prometheus::MeasureHandle\">MeasureHandle</a>","synthetic":true,"types":["opentelemetry::exporter::metrics::prometheus::MeasureHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/exporter/trace/struct.SpanData.html\" title=\"struct opentelemetry::exporter::trace::SpanData\">SpanData</a>","synthetic":true,"types":["opentelemetry::exporter::trace::SpanData"]},{"text":"impl Freeze for <a class=\"enum\" href=\"opentelemetry/exporter/trace/enum.ExportResult.html\" title=\"enum opentelemetry::exporter::trace::ExportResult\">ExportResult</a>","synthetic":true,"types":["opentelemetry::exporter::trace::ExportResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/global/struct.BoxedSpan.html\" title=\"struct opentelemetry::global::BoxedSpan\">BoxedSpan</a>","synthetic":true,"types":["opentelemetry::global::BoxedSpan"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/global/struct.BoxedTracer.html\" title=\"struct opentelemetry::global::BoxedTracer\">BoxedTracer</a>","synthetic":true,"types":["opentelemetry::global::BoxedTracer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/global/struct.GlobalProvider.html\" title=\"struct opentelemetry::global::GlobalProvider\">GlobalProvider</a>","synthetic":true,"types":["opentelemetry::global::GlobalProvider"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/sdk/metrics/struct.Meter.html\" title=\"struct opentelemetry::sdk::metrics::Meter\">Meter</a>","synthetic":true,"types":["opentelemetry::sdk::metrics::Meter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/sdk/trace/config/struct.Config.html\" title=\"struct opentelemetry::sdk::trace::config::Config\">Config</a>","synthetic":true,"types":["opentelemetry::sdk::trace::config::Config"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"opentelemetry/sdk/trace/evicted_queue/struct.EvictedQueue.html\" title=\"struct opentelemetry::sdk::trace::evicted_queue::EvictedQueue\">EvictedQueue</a>&lt;T&gt;","synthetic":true,"types":["opentelemetry::sdk::trace::evicted_queue::EvictedQueue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/sdk/trace/provider/struct.Provider.html\" title=\"struct opentelemetry::sdk::trace::provider::Provider\">Provider</a>","synthetic":true,"types":["opentelemetry::sdk::trace::provider::Provider"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/sdk/trace/provider/struct.Builder.html\" title=\"struct opentelemetry::sdk::trace::provider::Builder\">Builder</a>","synthetic":true,"types":["opentelemetry::sdk::trace::provider::Builder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"opentelemetry/sdk/trace/sampler/enum.Sampler.html\" title=\"enum opentelemetry::sdk::trace::sampler::Sampler\">Sampler</a>","synthetic":true,"types":["opentelemetry::sdk::trace::sampler::Sampler"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/sdk/trace/span/struct.Span.html\" title=\"struct opentelemetry::sdk::trace::span::Span\">Span</a>","synthetic":true,"types":["opentelemetry::sdk::trace::span::Span"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/sdk/trace/span_processor/struct.SimpleSpanProcessor.html\" title=\"struct opentelemetry::sdk::trace::span_processor::SimpleSpanProcessor\">SimpleSpanProcessor</a>","synthetic":true,"types":["opentelemetry::sdk::trace::span_processor::SimpleSpanProcessor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"opentelemetry/sdk/trace/tracer/struct.Tracer.html\" title=\"struct opentelemetry::sdk::trace::tracer::Tracer\">Tracer</a>","synthetic":true,"types":["opentelemetry::sdk::trace::tracer::Tracer"]}];
implementors["opentelemetry_stackdriver"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"opentelemetry_stackdriver/struct.StackDriverExporter.html\" title=\"struct opentelemetry_stackdriver::StackDriverExporter\">StackDriverExporter</a>","synthetic":true,"types":["opentelemetry_stackdriver::StackDriverExporter"]}];
implementors["parking_lot"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"parking_lot/struct.Condvar.html\" title=\"struct parking_lot::Condvar\">Condvar</a>","synthetic":true,"types":["parking_lot::condvar::Condvar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot/struct.WaitTimeoutResult.html\" title=\"struct parking_lot::WaitTimeoutResult\">WaitTimeoutResult</a>","synthetic":true,"types":["parking_lot::condvar::WaitTimeoutResult"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"parking_lot/struct.Once.html\" title=\"struct parking_lot::Once\">Once</a>","synthetic":true,"types":["parking_lot::once::Once"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"parking_lot/struct.RawMutex.html\" title=\"struct parking_lot::RawMutex\">RawMutex</a>","synthetic":true,"types":["parking_lot::raw_mutex::RawMutex"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"parking_lot/struct.RawRwLock.html\" title=\"struct parking_lot::RawRwLock\">RawRwLock</a>","synthetic":true,"types":["parking_lot::raw_rwlock::RawRwLock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot/struct.RawThreadId.html\" title=\"struct parking_lot::RawThreadId\">RawThreadId</a>","synthetic":true,"types":["parking_lot::remutex::RawThreadId"]},{"text":"impl Freeze for <a class=\"enum\" href=\"parking_lot/enum.OnceState.html\" title=\"enum parking_lot::OnceState\">OnceState</a>","synthetic":true,"types":["parking_lot::once::OnceState"]}];
implementors["parking_lot_core"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot_core/struct.ParkToken.html\" title=\"struct parking_lot_core::ParkToken\">ParkToken</a>","synthetic":true,"types":["parking_lot_core::parking_lot::ParkToken"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot_core/struct.UnparkResult.html\" title=\"struct parking_lot_core::UnparkResult\">UnparkResult</a>","synthetic":true,"types":["parking_lot_core::parking_lot::UnparkResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot_core/struct.UnparkToken.html\" title=\"struct parking_lot_core::UnparkToken\">UnparkToken</a>","synthetic":true,"types":["parking_lot_core::parking_lot::UnparkToken"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot_core/struct.SpinWait.html\" title=\"struct parking_lot_core::SpinWait\">SpinWait</a>","synthetic":true,"types":["parking_lot_core::spinwait::SpinWait"]},{"text":"impl Freeze for <a class=\"enum\" href=\"parking_lot_core/enum.FilterOp.html\" title=\"enum parking_lot_core::FilterOp\">FilterOp</a>","synthetic":true,"types":["parking_lot_core::parking_lot::FilterOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"parking_lot_core/enum.ParkResult.html\" title=\"enum parking_lot_core::ParkResult\">ParkResult</a>","synthetic":true,"types":["parking_lot_core::parking_lot::ParkResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"parking_lot_core/enum.RequeueOp.html\" title=\"enum parking_lot_core::RequeueOp\">RequeueOp</a>","synthetic":true,"types":["parking_lot_core::parking_lot::RequeueOp"]}];
implementors["ppv_lite86"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesS3.html\" title=\"struct ppv_lite86::x86_64::YesS3\">YesS3</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesS3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoS3.html\" title=\"struct ppv_lite86::x86_64::NoS3\">NoS3</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoS3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesS4.html\" title=\"struct ppv_lite86::x86_64::YesS4\">YesS4</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesS4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoS4.html\" title=\"struct ppv_lite86::x86_64::NoS4\">NoS4</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoS4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesA1.html\" title=\"struct ppv_lite86::x86_64::YesA1\">YesA1</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesA1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoA1.html\" title=\"struct ppv_lite86::x86_64::NoA1\">NoA1</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoA1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesA2.html\" title=\"struct ppv_lite86::x86_64::YesA2\">YesA2</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesA2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoA2.html\" title=\"struct ppv_lite86::x86_64::NoA2\">NoA2</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoA2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesNI.html\" title=\"struct ppv_lite86::x86_64::YesNI\">YesNI</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesNI"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoNI.html\" title=\"struct ppv_lite86::x86_64::NoNI\">NoNI</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoNI"]},{"text":"impl&lt;S3, S4, NI&gt; Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.SseMachine.html\" title=\"struct ppv_lite86::x86_64::SseMachine\">SseMachine</a>&lt;S3, S4, NI&gt;","synthetic":true,"types":["ppv_lite86::x86_64::SseMachine"]},{"text":"impl&lt;NI&gt; Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.Avx2Machine.html\" title=\"struct ppv_lite86::x86_64::Avx2Machine\">Avx2Machine</a>&lt;NI&gt;","synthetic":true,"types":["ppv_lite86::x86_64::Avx2Machine"]},{"text":"impl Freeze for <a class=\"union\" href=\"ppv_lite86/x86_64/union.vec128_storage.html\" title=\"union ppv_lite86::x86_64::vec128_storage\">vec128_storage</a>","synthetic":true,"types":["ppv_lite86::x86_64::vec128_storage"]},{"text":"impl Freeze for <a class=\"union\" href=\"ppv_lite86/x86_64/union.vec256_storage.html\" title=\"union ppv_lite86::x86_64::vec256_storage\">vec256_storage</a>","synthetic":true,"types":["ppv_lite86::x86_64::vec256_storage"]},{"text":"impl Freeze for <a class=\"union\" href=\"ppv_lite86/x86_64/union.vec512_storage.html\" title=\"union ppv_lite86::x86_64::vec512_storage\">vec512_storage</a>","synthetic":true,"types":["ppv_lite86::x86_64::vec512_storage"]}];
implementors["proc_macro2"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.TokenStream.html\" title=\"struct proc_macro2::TokenStream\">TokenStream</a>","synthetic":true,"types":["proc_macro2::TokenStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.LexError.html\" title=\"struct proc_macro2::LexError\">LexError</a>","synthetic":true,"types":["proc_macro2::LexError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Span.html\" title=\"struct proc_macro2::Span\">Span</a>","synthetic":true,"types":["proc_macro2::Span"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Group.html\" title=\"struct proc_macro2::Group\">Group</a>","synthetic":true,"types":["proc_macro2::Group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Punct.html\" title=\"struct proc_macro2::Punct\">Punct</a>","synthetic":true,"types":["proc_macro2::Punct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Ident.html\" title=\"struct proc_macro2::Ident\">Ident</a>","synthetic":true,"types":["proc_macro2::Ident"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Literal.html\" title=\"struct proc_macro2::Literal\">Literal</a>","synthetic":true,"types":["proc_macro2::Literal"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.TokenTree.html\" title=\"enum proc_macro2::TokenTree\">TokenTree</a>","synthetic":true,"types":["proc_macro2::TokenTree"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.Delimiter.html\" title=\"enum proc_macro2::Delimiter\">Delimiter</a>","synthetic":true,"types":["proc_macro2::Delimiter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.Spacing.html\" title=\"enum proc_macro2::Spacing\">Spacing</a>","synthetic":true,"types":["proc_macro2::Spacing"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/token_stream/struct.IntoIter.html\" title=\"struct proc_macro2::token_stream::IntoIter\">IntoIter</a>","synthetic":true,"types":["proc_macro2::token_stream::IntoIter"]}];
implementors["prometheus"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/struct.ProtobufEncoder.html\" title=\"struct prometheus::ProtobufEncoder\">ProtobufEncoder</a>","synthetic":true,"types":["prometheus::encoder::pb::ProtobufEncoder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/struct.TextEncoder.html\" title=\"struct prometheus::TextEncoder\">TextEncoder</a>","synthetic":true,"types":["prometheus::encoder::text::TextEncoder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/struct.Histogram.html\" title=\"struct prometheus::Histogram\">Histogram</a>","synthetic":true,"types":["prometheus::histogram::Histogram"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/struct.HistogramOpts.html\" title=\"struct prometheus::HistogramOpts\">HistogramOpts</a>","synthetic":true,"types":["prometheus::histogram::HistogramOpts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/struct.HistogramTimer.html\" title=\"struct prometheus::HistogramTimer\">HistogramTimer</a>","synthetic":true,"types":["prometheus::histogram::HistogramTimer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/struct.Opts.html\" title=\"struct prometheus::Opts\">Opts</a>","synthetic":true,"types":["prometheus::metrics::Opts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/struct.Registry.html\" title=\"struct prometheus::Registry\">Registry</a>","synthetic":true,"types":["prometheus::registry::Registry"]},{"text":"impl Freeze for <a class=\"enum\" href=\"prometheus/enum.Error.html\" title=\"enum prometheus::Error\">Error</a>","synthetic":true,"types":["prometheus::errors::Error"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"prometheus/proto/struct.LabelPair.html\" title=\"struct prometheus::proto::LabelPair\">LabelPair</a>","synthetic":true,"types":["prometheus::proto::LabelPair"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"prometheus/proto/struct.Gauge.html\" title=\"struct prometheus::proto::Gauge\">Gauge</a>","synthetic":true,"types":["prometheus::proto::Gauge"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"prometheus/proto/struct.Counter.html\" title=\"struct prometheus::proto::Counter\">Counter</a>","synthetic":true,"types":["prometheus::proto::Counter"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"prometheus/proto/struct.Quantile.html\" title=\"struct prometheus::proto::Quantile\">Quantile</a>","synthetic":true,"types":["prometheus::proto::Quantile"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"prometheus/proto/struct.Summary.html\" title=\"struct prometheus::proto::Summary\">Summary</a>","synthetic":true,"types":["prometheus::proto::Summary"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"prometheus/proto/struct.Untyped.html\" title=\"struct prometheus::proto::Untyped\">Untyped</a>","synthetic":true,"types":["prometheus::proto::Untyped"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"prometheus/proto/struct.Histogram.html\" title=\"struct prometheus::proto::Histogram\">Histogram</a>","synthetic":true,"types":["prometheus::proto::Histogram"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"prometheus/proto/struct.Bucket.html\" title=\"struct prometheus::proto::Bucket\">Bucket</a>","synthetic":true,"types":["prometheus::proto::Bucket"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"prometheus/proto/struct.Metric.html\" title=\"struct prometheus::proto::Metric\">Metric</a>","synthetic":true,"types":["prometheus::proto::Metric"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"prometheus/proto/struct.MetricFamily.html\" title=\"struct prometheus::proto::MetricFamily\">MetricFamily</a>","synthetic":true,"types":["prometheus::proto::MetricFamily"]},{"text":"impl Freeze for <a class=\"enum\" href=\"prometheus/proto/enum.MetricType.html\" title=\"enum prometheus::proto::MetricType\">MetricType</a>","synthetic":true,"types":["prometheus::proto::MetricType"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"prometheus/core/struct.AtomicF64.html\" title=\"struct prometheus::core::AtomicF64\">AtomicF64</a>","synthetic":true,"types":["prometheus::atomic64::AtomicF64"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"prometheus/core/struct.AtomicI64.html\" title=\"struct prometheus::core::AtomicI64\">AtomicI64</a>","synthetic":true,"types":["prometheus::atomic64::AtomicI64"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"prometheus/core/struct.AtomicU64.html\" title=\"struct prometheus::core::AtomicU64\">AtomicU64</a>","synthetic":true,"types":["prometheus::atomic64::AtomicU64"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"prometheus/core/struct.GenericCounter.html\" title=\"struct prometheus::core::GenericCounter\">GenericCounter</a>&lt;P&gt;","synthetic":true,"types":["prometheus::counter::GenericCounter"]},{"text":"impl&lt;P&gt; !Freeze for <a class=\"struct\" href=\"prometheus/core/struct.GenericLocalCounter.html\" title=\"struct prometheus::core::GenericLocalCounter\">GenericLocalCounter</a>&lt;P&gt;","synthetic":true,"types":["prometheus::counter::GenericLocalCounter"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"prometheus/core/struct.GenericLocalCounterVec.html\" title=\"struct prometheus::core::GenericLocalCounterVec\">GenericLocalCounterVec</a>&lt;P&gt;","synthetic":true,"types":["prometheus::counter::GenericLocalCounterVec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/core/struct.Desc.html\" title=\"struct prometheus::core::Desc\">Desc</a>","synthetic":true,"types":["prometheus::desc::Desc"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"prometheus/core/struct.GenericGauge.html\" title=\"struct prometheus::core::GenericGauge\">GenericGauge</a>&lt;P&gt;","synthetic":true,"types":["prometheus::gauge::GenericGauge"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"prometheus/local/struct.LocalHistogram.html\" title=\"struct prometheus::local::LocalHistogram\">LocalHistogram</a>","synthetic":true,"types":["prometheus::histogram::LocalHistogram"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"prometheus/local/struct.LocalHistogramTimer.html\" title=\"struct prometheus::local::LocalHistogramTimer\">LocalHistogramTimer</a>","synthetic":true,"types":["prometheus::histogram::LocalHistogramTimer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prometheus/local/struct.LocalHistogramVec.html\" title=\"struct prometheus::local::LocalHistogramVec\">LocalHistogramVec</a>","synthetic":true,"types":["prometheus::histogram::LocalHistogramVec"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"prometheus/core/struct.MetricVec.html\" title=\"struct prometheus::core::MetricVec\">MetricVec</a>&lt;T&gt;","synthetic":true,"types":["prometheus::vec::MetricVec"]}];
implementors["protobuf"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/struct.CachedSize.html\" title=\"struct protobuf::CachedSize\">CachedSize</a>","synthetic":true,"types":["protobuf::cached_size::CachedSize"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"protobuf/struct.RepeatedField.html\" title=\"struct protobuf::RepeatedField\">RepeatedField</a>&lt;T&gt;","synthetic":true,"types":["protobuf::repeated::RepeatedField"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"protobuf/struct.SingularField.html\" title=\"struct protobuf::SingularField\">SingularField</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["protobuf::singular::SingularField"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"protobuf/struct.SingularPtrField.html\" title=\"struct protobuf::SingularPtrField\">SingularPtrField</a>&lt;T&gt;","synthetic":true,"types":["protobuf::singular::SingularPtrField"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"protobuf/struct.CodedInputStream.html\" title=\"struct protobuf::CodedInputStream\">CodedInputStream</a>&lt;'a&gt;","synthetic":true,"types":["protobuf::stream::CodedInputStream"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"protobuf/struct.CodedOutputStream.html\" title=\"struct protobuf::CodedOutputStream\">CodedOutputStream</a>&lt;'a&gt;","synthetic":true,"types":["protobuf::stream::CodedOutputStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"protobuf/struct.UnknownFields.html\" title=\"struct protobuf::UnknownFields\">UnknownFields</a>","synthetic":true,"types":["protobuf::unknown::UnknownFields"]},{"text":"impl&lt;'s&gt; Freeze for <a class=\"struct\" href=\"protobuf/struct.UnknownFieldsIter.html\" title=\"struct protobuf::UnknownFieldsIter\">UnknownFieldsIter</a>&lt;'s&gt;","synthetic":true,"types":["protobuf::unknown::UnknownFieldsIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"protobuf/struct.UnknownValues.html\" title=\"struct protobuf::UnknownValues\">UnknownValues</a>","synthetic":true,"types":["protobuf::unknown::UnknownValues"]},{"text":"impl&lt;'o&gt; Freeze for <a class=\"struct\" href=\"protobuf/struct.UnknownValuesIter.html\" title=\"struct protobuf::UnknownValuesIter\">UnknownValuesIter</a>&lt;'o&gt;","synthetic":true,"types":["protobuf::unknown::UnknownValuesIter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"protobuf/enum.UnknownValue.html\" title=\"enum protobuf::UnknownValue\">UnknownValue</a>","synthetic":true,"types":["protobuf::unknown::UnknownValue"]},{"text":"impl&lt;'o&gt; Freeze for <a class=\"enum\" href=\"protobuf/enum.UnknownValueRef.html\" title=\"enum protobuf::UnknownValueRef\">UnknownValueRef</a>&lt;'o&gt;","synthetic":true,"types":["protobuf::unknown::UnknownValueRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"protobuf/wire_format/struct.Tag.html\" title=\"struct protobuf::wire_format::Tag\">Tag</a>","synthetic":true,"types":["protobuf::stream::wire_format::Tag"]},{"text":"impl Freeze for <a class=\"enum\" href=\"protobuf/wire_format/enum.WireType.html\" title=\"enum protobuf::wire_format::WireType\">WireType</a>","synthetic":true,"types":["protobuf::stream::wire_format::WireType"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.FileDescriptorSet.html\" title=\"struct protobuf::descriptor::FileDescriptorSet\">FileDescriptorSet</a>","synthetic":true,"types":["protobuf::descriptor::FileDescriptorSet"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.FileDescriptorProto.html\" title=\"struct protobuf::descriptor::FileDescriptorProto\">FileDescriptorProto</a>","synthetic":true,"types":["protobuf::descriptor::FileDescriptorProto"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.DescriptorProto.html\" title=\"struct protobuf::descriptor::DescriptorProto\">DescriptorProto</a>","synthetic":true,"types":["protobuf::descriptor::DescriptorProto"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.DescriptorProto_ExtensionRange.html\" title=\"struct protobuf::descriptor::DescriptorProto_ExtensionRange\">DescriptorProto_ExtensionRange</a>","synthetic":true,"types":["protobuf::descriptor::DescriptorProto_ExtensionRange"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.DescriptorProto_ReservedRange.html\" title=\"struct protobuf::descriptor::DescriptorProto_ReservedRange\">DescriptorProto_ReservedRange</a>","synthetic":true,"types":["protobuf::descriptor::DescriptorProto_ReservedRange"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.FieldDescriptorProto.html\" title=\"struct protobuf::descriptor::FieldDescriptorProto\">FieldDescriptorProto</a>","synthetic":true,"types":["protobuf::descriptor::FieldDescriptorProto"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.OneofDescriptorProto.html\" title=\"struct protobuf::descriptor::OneofDescriptorProto\">OneofDescriptorProto</a>","synthetic":true,"types":["protobuf::descriptor::OneofDescriptorProto"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.EnumDescriptorProto.html\" title=\"struct protobuf::descriptor::EnumDescriptorProto\">EnumDescriptorProto</a>","synthetic":true,"types":["protobuf::descriptor::EnumDescriptorProto"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.EnumValueDescriptorProto.html\" title=\"struct protobuf::descriptor::EnumValueDescriptorProto\">EnumValueDescriptorProto</a>","synthetic":true,"types":["protobuf::descriptor::EnumValueDescriptorProto"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.ServiceDescriptorProto.html\" title=\"struct protobuf::descriptor::ServiceDescriptorProto\">ServiceDescriptorProto</a>","synthetic":true,"types":["protobuf::descriptor::ServiceDescriptorProto"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.MethodDescriptorProto.html\" title=\"struct protobuf::descriptor::MethodDescriptorProto\">MethodDescriptorProto</a>","synthetic":true,"types":["protobuf::descriptor::MethodDescriptorProto"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.FileOptions.html\" title=\"struct protobuf::descriptor::FileOptions\">FileOptions</a>","synthetic":true,"types":["protobuf::descriptor::FileOptions"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.MessageOptions.html\" title=\"struct protobuf::descriptor::MessageOptions\">MessageOptions</a>","synthetic":true,"types":["protobuf::descriptor::MessageOptions"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.FieldOptions.html\" title=\"struct protobuf::descriptor::FieldOptions\">FieldOptions</a>","synthetic":true,"types":["protobuf::descriptor::FieldOptions"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.OneofOptions.html\" title=\"struct protobuf::descriptor::OneofOptions\">OneofOptions</a>","synthetic":true,"types":["protobuf::descriptor::OneofOptions"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.EnumOptions.html\" title=\"struct protobuf::descriptor::EnumOptions\">EnumOptions</a>","synthetic":true,"types":["protobuf::descriptor::EnumOptions"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.EnumValueOptions.html\" title=\"struct protobuf::descriptor::EnumValueOptions\">EnumValueOptions</a>","synthetic":true,"types":["protobuf::descriptor::EnumValueOptions"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.ServiceOptions.html\" title=\"struct protobuf::descriptor::ServiceOptions\">ServiceOptions</a>","synthetic":true,"types":["protobuf::descriptor::ServiceOptions"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.MethodOptions.html\" title=\"struct protobuf::descriptor::MethodOptions\">MethodOptions</a>","synthetic":true,"types":["protobuf::descriptor::MethodOptions"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.UninterpretedOption.html\" title=\"struct protobuf::descriptor::UninterpretedOption\">UninterpretedOption</a>","synthetic":true,"types":["protobuf::descriptor::UninterpretedOption"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.UninterpretedOption_NamePart.html\" title=\"struct protobuf::descriptor::UninterpretedOption_NamePart\">UninterpretedOption_NamePart</a>","synthetic":true,"types":["protobuf::descriptor::UninterpretedOption_NamePart"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.SourceCodeInfo.html\" title=\"struct protobuf::descriptor::SourceCodeInfo\">SourceCodeInfo</a>","synthetic":true,"types":["protobuf::descriptor::SourceCodeInfo"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.SourceCodeInfo_Location.html\" title=\"struct protobuf::descriptor::SourceCodeInfo_Location\">SourceCodeInfo_Location</a>","synthetic":true,"types":["protobuf::descriptor::SourceCodeInfo_Location"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.GeneratedCodeInfo.html\" title=\"struct protobuf::descriptor::GeneratedCodeInfo\">GeneratedCodeInfo</a>","synthetic":true,"types":["protobuf::descriptor::GeneratedCodeInfo"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/descriptor/struct.GeneratedCodeInfo_Annotation.html\" title=\"struct protobuf::descriptor::GeneratedCodeInfo_Annotation\">GeneratedCodeInfo_Annotation</a>","synthetic":true,"types":["protobuf::descriptor::GeneratedCodeInfo_Annotation"]},{"text":"impl Freeze for <a class=\"enum\" href=\"protobuf/descriptor/enum.FieldDescriptorProto_Type.html\" title=\"enum protobuf::descriptor::FieldDescriptorProto_Type\">FieldDescriptorProto_Type</a>","synthetic":true,"types":["protobuf::descriptor::FieldDescriptorProto_Type"]},{"text":"impl Freeze for <a class=\"enum\" href=\"protobuf/descriptor/enum.FieldDescriptorProto_Label.html\" title=\"enum protobuf::descriptor::FieldDescriptorProto_Label\">FieldDescriptorProto_Label</a>","synthetic":true,"types":["protobuf::descriptor::FieldDescriptorProto_Label"]},{"text":"impl Freeze for <a class=\"enum\" href=\"protobuf/descriptor/enum.FileOptions_OptimizeMode.html\" title=\"enum protobuf::descriptor::FileOptions_OptimizeMode\">FileOptions_OptimizeMode</a>","synthetic":true,"types":["protobuf::descriptor::FileOptions_OptimizeMode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"protobuf/descriptor/enum.FieldOptions_CType.html\" title=\"enum protobuf::descriptor::FieldOptions_CType\">FieldOptions_CType</a>","synthetic":true,"types":["protobuf::descriptor::FieldOptions_CType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"protobuf/descriptor/enum.FieldOptions_JSType.html\" title=\"enum protobuf::descriptor::FieldOptions_JSType\">FieldOptions_JSType</a>","synthetic":true,"types":["protobuf::descriptor::FieldOptions_JSType"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/plugin/struct.CodeGeneratorRequest.html\" title=\"struct protobuf::plugin::CodeGeneratorRequest\">CodeGeneratorRequest</a>","synthetic":true,"types":["protobuf::plugin::CodeGeneratorRequest"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/plugin/struct.CodeGeneratorResponse.html\" title=\"struct protobuf::plugin::CodeGeneratorResponse\">CodeGeneratorResponse</a>","synthetic":true,"types":["protobuf::plugin::CodeGeneratorResponse"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/plugin/struct.CodeGeneratorResponse_File.html\" title=\"struct protobuf::plugin::CodeGeneratorResponse_File\">CodeGeneratorResponse_File</a>","synthetic":true,"types":["protobuf::plugin::CodeGeneratorResponse_File"]},{"text":"impl Freeze for <a class=\"enum\" href=\"protobuf/error/enum.WireError.html\" title=\"enum protobuf::error::WireError\">WireError</a>","synthetic":true,"types":["protobuf::error::WireError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"protobuf/error/enum.ProtobufError.html\" title=\"enum protobuf::error::ProtobufError\">ProtobufError</a>","synthetic":true,"types":["protobuf::error::ProtobufError"]},{"text":"impl&lt;M, T&gt; Freeze for <a class=\"struct\" href=\"protobuf/ext/struct.ExtFieldOptional.html\" title=\"struct protobuf::ext::ExtFieldOptional\">ExtFieldOptional</a>&lt;M, T&gt;","synthetic":true,"types":["protobuf::ext::ExtFieldOptional"]},{"text":"impl&lt;M, T&gt; Freeze for <a class=\"struct\" href=\"protobuf/ext/struct.ExtFieldRepeated.html\" title=\"struct protobuf::ext::ExtFieldRepeated\">ExtFieldRepeated</a>&lt;M, T&gt;","synthetic":true,"types":["protobuf::ext::ExtFieldRepeated"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"protobuf/lazy/struct.Lazy.html\" title=\"struct protobuf::lazy::Lazy\">Lazy</a>&lt;T&gt;","synthetic":true,"types":["protobuf::lazy::Lazy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"protobuf/reflect/struct.FieldDescriptor.html\" title=\"struct protobuf::reflect::FieldDescriptor\">FieldDescriptor</a>","synthetic":true,"types":["protobuf::reflect::FieldDescriptor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"protobuf/reflect/struct.MessageDescriptor.html\" title=\"struct protobuf::reflect::MessageDescriptor\">MessageDescriptor</a>","synthetic":true,"types":["protobuf::reflect::MessageDescriptor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"protobuf/reflect/struct.EnumValueDescriptor.html\" title=\"struct protobuf::reflect::EnumValueDescriptor\">EnumValueDescriptor</a>","synthetic":true,"types":["protobuf::reflect::EnumValueDescriptor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"protobuf/reflect/struct.EnumDescriptor.html\" title=\"struct protobuf::reflect::EnumDescriptor\">EnumDescriptor</a>","synthetic":true,"types":["protobuf::reflect::EnumDescriptor"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"protobuf/reflect/enum.ProtobufValueRef.html\" title=\"enum protobuf::reflect::ProtobufValueRef\">ProtobufValueRef</a>&lt;'a&gt;","synthetic":true,"types":["protobuf::reflect::value::ProtobufValueRef"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"protobuf/reflect/enum.ReflectFieldRef.html\" title=\"enum protobuf::reflect::ReflectFieldRef\">ReflectFieldRef</a>&lt;'a&gt;","synthetic":true,"types":["protobuf::reflect::ReflectFieldRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"protobuf/types/struct.ProtobufTypeFloat.html\" title=\"struct protobuf::types::ProtobufTypeFloat\">ProtobufTypeFloat</a>","synthetic":true,"types":["protobuf::types::ProtobufTypeFloat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"protobuf/types/struct.ProtobufTypeDouble.html\" title=\"struct protobuf::types::ProtobufTypeDouble\">ProtobufTypeDouble</a>","synthetic":true,"types":["protobuf::types::ProtobufTypeDouble"]},{"text":"impl Freeze for <a class=\"struct\" href=\"protobuf/types/struct.ProtobufTypeInt32.html\" title=\"struct protobuf::types::ProtobufTypeInt32\">ProtobufTypeInt32</a>","synthetic":true,"types":["protobuf::types::ProtobufTypeInt32"]},{"text":"impl Freeze for <a class=\"struct\" href=\"protobuf/types/struct.ProtobufTypeInt64.html\" title=\"struct protobuf::types::ProtobufTypeInt64\">ProtobufTypeInt64</a>","synthetic":true,"types":["protobuf::types::ProtobufTypeInt64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"protobuf/types/struct.ProtobufTypeUint32.html\" title=\"struct protobuf::types::ProtobufTypeUint32\">ProtobufTypeUint32</a>","synthetic":true,"types":["protobuf::types::ProtobufTypeUint32"]},{"text":"impl Freeze for <a class=\"struct\" href=\"protobuf/types/struct.ProtobufTypeUint64.html\" title=\"struct protobuf::types::ProtobufTypeUint64\">ProtobufTypeUint64</a>","synthetic":true,"types":["protobuf::types::ProtobufTypeUint64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"protobuf/types/struct.ProtobufTypeSint32.html\" title=\"struct protobuf::types::ProtobufTypeSint32\">ProtobufTypeSint32</a>","synthetic":true,"types":["protobuf::types::ProtobufTypeSint32"]},{"text":"impl Freeze for <a class=\"struct\" href=\"protobuf/types/struct.ProtobufTypeSint64.html\" title=\"struct protobuf::types::ProtobufTypeSint64\">ProtobufTypeSint64</a>","synthetic":true,"types":["protobuf::types::ProtobufTypeSint64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"protobuf/types/struct.ProtobufTypeFixed32.html\" title=\"struct protobuf::types::ProtobufTypeFixed32\">ProtobufTypeFixed32</a>","synthetic":true,"types":["protobuf::types::ProtobufTypeFixed32"]},{"text":"impl Freeze for <a class=\"struct\" href=\"protobuf/types/struct.ProtobufTypeFixed64.html\" title=\"struct protobuf::types::ProtobufTypeFixed64\">ProtobufTypeFixed64</a>","synthetic":true,"types":["protobuf::types::ProtobufTypeFixed64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"protobuf/types/struct.ProtobufTypeSfixed32.html\" title=\"struct protobuf::types::ProtobufTypeSfixed32\">ProtobufTypeSfixed32</a>","synthetic":true,"types":["protobuf::types::ProtobufTypeSfixed32"]},{"text":"impl Freeze for <a class=\"struct\" href=\"protobuf/types/struct.ProtobufTypeSfixed64.html\" title=\"struct protobuf::types::ProtobufTypeSfixed64\">ProtobufTypeSfixed64</a>","synthetic":true,"types":["protobuf::types::ProtobufTypeSfixed64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"protobuf/types/struct.ProtobufTypeBool.html\" title=\"struct protobuf::types::ProtobufTypeBool\">ProtobufTypeBool</a>","synthetic":true,"types":["protobuf::types::ProtobufTypeBool"]},{"text":"impl Freeze for <a class=\"struct\" href=\"protobuf/types/struct.ProtobufTypeString.html\" title=\"struct protobuf::types::ProtobufTypeString\">ProtobufTypeString</a>","synthetic":true,"types":["protobuf::types::ProtobufTypeString"]},{"text":"impl Freeze for <a class=\"struct\" href=\"protobuf/types/struct.ProtobufTypeBytes.html\" title=\"struct protobuf::types::ProtobufTypeBytes\">ProtobufTypeBytes</a>","synthetic":true,"types":["protobuf::types::ProtobufTypeBytes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"protobuf/types/struct.ProtobufTypeChars.html\" title=\"struct protobuf::types::ProtobufTypeChars\">ProtobufTypeChars</a>","synthetic":true,"types":["protobuf::types::ProtobufTypeChars"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"protobuf/types/struct.ProtobufTypeEnum.html\" title=\"struct protobuf::types::ProtobufTypeEnum\">ProtobufTypeEnum</a>&lt;E&gt;","synthetic":true,"types":["protobuf::types::ProtobufTypeEnum"]},{"text":"impl&lt;M&gt; Freeze for <a class=\"struct\" href=\"protobuf/types/struct.ProtobufTypeMessage.html\" title=\"struct protobuf::types::ProtobufTypeMessage\">ProtobufTypeMessage</a>&lt;M&gt;","synthetic":true,"types":["protobuf::types::ProtobufTypeMessage"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.Any.html\" title=\"struct protobuf::well_known_types::Any\">Any</a>","synthetic":true,"types":["protobuf::well_known_types::any::Any"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.Api.html\" title=\"struct protobuf::well_known_types::Api\">Api</a>","synthetic":true,"types":["protobuf::well_known_types::api::Api"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.Method.html\" title=\"struct protobuf::well_known_types::Method\">Method</a>","synthetic":true,"types":["protobuf::well_known_types::api::Method"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.Mixin.html\" title=\"struct protobuf::well_known_types::Mixin\">Mixin</a>","synthetic":true,"types":["protobuf::well_known_types::api::Mixin"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.Duration.html\" title=\"struct protobuf::well_known_types::Duration\">Duration</a>","synthetic":true,"types":["protobuf::well_known_types::duration::Duration"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.Empty.html\" title=\"struct protobuf::well_known_types::Empty\">Empty</a>","synthetic":true,"types":["protobuf::well_known_types::empty::Empty"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.FieldMask.html\" title=\"struct protobuf::well_known_types::FieldMask\">FieldMask</a>","synthetic":true,"types":["protobuf::well_known_types::field_mask::FieldMask"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.SourceContext.html\" title=\"struct protobuf::well_known_types::SourceContext\">SourceContext</a>","synthetic":true,"types":["protobuf::well_known_types::source_context::SourceContext"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.Struct.html\" title=\"struct protobuf::well_known_types::Struct\">Struct</a>","synthetic":true,"types":["protobuf::well_known_types::struct_pb::Struct"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.Value.html\" title=\"struct protobuf::well_known_types::Value\">Value</a>","synthetic":true,"types":["protobuf::well_known_types::struct_pb::Value"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.ListValue.html\" title=\"struct protobuf::well_known_types::ListValue\">ListValue</a>","synthetic":true,"types":["protobuf::well_known_types::struct_pb::ListValue"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.Timestamp.html\" title=\"struct protobuf::well_known_types::Timestamp\">Timestamp</a>","synthetic":true,"types":["protobuf::well_known_types::timestamp::Timestamp"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.Type.html\" title=\"struct protobuf::well_known_types::Type\">Type</a>","synthetic":true,"types":["protobuf::well_known_types::type_pb::Type"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.Field.html\" title=\"struct protobuf::well_known_types::Field\">Field</a>","synthetic":true,"types":["protobuf::well_known_types::type_pb::Field"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.Enum.html\" title=\"struct protobuf::well_known_types::Enum\">Enum</a>","synthetic":true,"types":["protobuf::well_known_types::type_pb::Enum"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.EnumValue.html\" title=\"struct protobuf::well_known_types::EnumValue\">EnumValue</a>","synthetic":true,"types":["protobuf::well_known_types::type_pb::EnumValue"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.Option.html\" title=\"struct protobuf::well_known_types::Option\">Option</a>","synthetic":true,"types":["protobuf::well_known_types::type_pb::Option"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.DoubleValue.html\" title=\"struct protobuf::well_known_types::DoubleValue\">DoubleValue</a>","synthetic":true,"types":["protobuf::well_known_types::wrappers::DoubleValue"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.FloatValue.html\" title=\"struct protobuf::well_known_types::FloatValue\">FloatValue</a>","synthetic":true,"types":["protobuf::well_known_types::wrappers::FloatValue"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.Int64Value.html\" title=\"struct protobuf::well_known_types::Int64Value\">Int64Value</a>","synthetic":true,"types":["protobuf::well_known_types::wrappers::Int64Value"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.UInt64Value.html\" title=\"struct protobuf::well_known_types::UInt64Value\">UInt64Value</a>","synthetic":true,"types":["protobuf::well_known_types::wrappers::UInt64Value"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.Int32Value.html\" title=\"struct protobuf::well_known_types::Int32Value\">Int32Value</a>","synthetic":true,"types":["protobuf::well_known_types::wrappers::Int32Value"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.UInt32Value.html\" title=\"struct protobuf::well_known_types::UInt32Value\">UInt32Value</a>","synthetic":true,"types":["protobuf::well_known_types::wrappers::UInt32Value"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.BoolValue.html\" title=\"struct protobuf::well_known_types::BoolValue\">BoolValue</a>","synthetic":true,"types":["protobuf::well_known_types::wrappers::BoolValue"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.StringValue.html\" title=\"struct protobuf::well_known_types::StringValue\">StringValue</a>","synthetic":true,"types":["protobuf::well_known_types::wrappers::StringValue"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"protobuf/well_known_types/struct.BytesValue.html\" title=\"struct protobuf::well_known_types::BytesValue\">BytesValue</a>","synthetic":true,"types":["protobuf::well_known_types::wrappers::BytesValue"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"protobuf/well_known_types/enum.Value_oneof_kind.html\" title=\"enum protobuf::well_known_types::Value_oneof_kind\">Value_oneof_kind</a>","synthetic":true,"types":["protobuf::well_known_types::struct_pb::Value_oneof_kind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"protobuf/well_known_types/enum.NullValue.html\" title=\"enum protobuf::well_known_types::NullValue\">NullValue</a>","synthetic":true,"types":["protobuf::well_known_types::struct_pb::NullValue"]},{"text":"impl Freeze for <a class=\"enum\" href=\"protobuf/well_known_types/enum.Field_Kind.html\" title=\"enum protobuf::well_known_types::Field_Kind\">Field_Kind</a>","synthetic":true,"types":["protobuf::well_known_types::type_pb::Field_Kind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"protobuf/well_known_types/enum.Field_Cardinality.html\" title=\"enum protobuf::well_known_types::Field_Cardinality\">Field_Cardinality</a>","synthetic":true,"types":["protobuf::well_known_types::type_pb::Field_Cardinality"]},{"text":"impl Freeze for <a class=\"enum\" href=\"protobuf/well_known_types/enum.Syntax.html\" title=\"enum protobuf::well_known_types::Syntax\">Syntax</a>","synthetic":true,"types":["protobuf::well_known_types::type_pb::Syntax"]}];
implementors["quick_error"] = [{"text":"impl&lt;X, E&gt; Freeze for <a class=\"struct\" href=\"quick_error/struct.Context.html\" title=\"struct quick_error::Context\">Context</a>&lt;X, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["quick_error::Context"]}];
implementors["rand"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Bernoulli.html\" title=\"struct rand::distributions::Bernoulli\">Bernoulli</a>","synthetic":true,"types":["rand::distributions::bernoulli::Bernoulli"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Open01.html\" title=\"struct rand::distributions::Open01\">Open01</a>","synthetic":true,"types":["rand::distributions::float::Open01"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.OpenClosed01.html\" title=\"struct rand::distributions::OpenClosed01\">OpenClosed01</a>","synthetic":true,"types":["rand::distributions::float::OpenClosed01"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Alphanumeric.html\" title=\"struct rand::distributions::Alphanumeric\">Alphanumeric</a>","synthetic":true,"types":["rand::distributions::other::Alphanumeric"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.Uniform.html\" title=\"struct rand::distributions::uniform::Uniform\">Uniform</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as <a class=\"trait\" href=\"rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a>&gt;::<a class=\"type\" href=\"rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" title=\"type rand::distributions::uniform::SampleUniform::Sampler\">Sampler</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::uniform::Uniform"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Binomial.html\" title=\"struct rand::distributions::Binomial\">Binomial</a>","synthetic":true,"types":["rand::distributions::binomial::Binomial"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Cauchy.html\" title=\"struct rand::distributions::Cauchy\">Cauchy</a>","synthetic":true,"types":["rand::distributions::cauchy::Cauchy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Dirichlet.html\" title=\"struct rand::distributions::Dirichlet\">Dirichlet</a>","synthetic":true,"types":["rand::distributions::dirichlet::Dirichlet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Exp.html\" title=\"struct rand::distributions::Exp\">Exp</a>","synthetic":true,"types":["rand::distributions::exponential::Exp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Exp1.html\" title=\"struct rand::distributions::Exp1\">Exp1</a>","synthetic":true,"types":["rand::distributions::exponential::Exp1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Beta.html\" title=\"struct rand::distributions::Beta\">Beta</a>","synthetic":true,"types":["rand::distributions::gamma::Beta"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.ChiSquared.html\" title=\"struct rand::distributions::ChiSquared\">ChiSquared</a>","synthetic":true,"types":["rand::distributions::gamma::ChiSquared"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.FisherF.html\" title=\"struct rand::distributions::FisherF\">FisherF</a>","synthetic":true,"types":["rand::distributions::gamma::FisherF"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Gamma.html\" title=\"struct rand::distributions::Gamma\">Gamma</a>","synthetic":true,"types":["rand::distributions::gamma::Gamma"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.StudentT.html\" title=\"struct rand::distributions::StudentT\">StudentT</a>","synthetic":true,"types":["rand::distributions::gamma::StudentT"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.LogNormal.html\" title=\"struct rand::distributions::LogNormal\">LogNormal</a>","synthetic":true,"types":["rand::distributions::normal::LogNormal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Normal.html\" title=\"struct rand::distributions::Normal\">Normal</a>","synthetic":true,"types":["rand::distributions::normal::Normal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.StandardNormal.html\" title=\"struct rand::distributions::StandardNormal\">StandardNormal</a>","synthetic":true,"types":["rand::distributions::normal::StandardNormal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Pareto.html\" title=\"struct rand::distributions::Pareto\">Pareto</a>","synthetic":true,"types":["rand::distributions::pareto::Pareto"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Poisson.html\" title=\"struct rand::distributions::Poisson\">Poisson</a>","synthetic":true,"types":["rand::distributions::poisson::Poisson"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Triangular.html\" title=\"struct rand::distributions::Triangular\">Triangular</a>","synthetic":true,"types":["rand::distributions::triangular::Triangular"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.UnitCircle.html\" title=\"struct rand::distributions::UnitCircle\">UnitCircle</a>","synthetic":true,"types":["rand::distributions::unit_circle::UnitCircle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.UnitSphereSurface.html\" title=\"struct rand::distributions::UnitSphereSurface\">UnitSphereSurface</a>","synthetic":true,"types":["rand::distributions::unit_sphere::UnitSphereSurface"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Weibull.html\" title=\"struct rand::distributions::Weibull\">Weibull</a>","synthetic":true,"types":["rand::distributions::weibull::Weibull"]},{"text":"impl&lt;D, R, T&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/struct.DistIter.html\" title=\"struct rand::distributions::DistIter\">DistIter</a>&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::DistIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Standard.html\" title=\"struct rand::distributions::Standard\">Standard</a>","synthetic":true,"types":["rand::distributions::Standard"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/distributions/enum.BernoulliError.html\" title=\"enum rand::distributions::BernoulliError\">BernoulliError</a>","synthetic":true,"types":["rand::distributions::bernoulli::BernoulliError"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformInt.html\" title=\"struct rand::distributions::uniform::UniformInt\">UniformInt</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::uniform::UniformInt"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformFloat.html\" title=\"struct rand::distributions::uniform::UniformFloat\">UniformFloat</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::uniform::UniformFloat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformDuration.html\" title=\"struct rand::distributions::uniform::UniformDuration\">UniformDuration</a>","synthetic":true,"types":["rand::distributions::uniform::UniformDuration"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/weighted/struct.WeightedIndex.html\" title=\"struct rand::distributions::weighted::WeightedIndex\">WeightedIndex</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as <a class=\"trait\" href=\"rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a>&gt;::<a class=\"type\" href=\"rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" title=\"type rand::distributions::uniform::SampleUniform::Sampler\">Sampler</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::weighted::WeightedIndex"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/distributions/weighted/enum.WeightedError.html\" title=\"enum rand::distributions::weighted::WeightedError\">WeightedError</a>","synthetic":true,"types":["rand::distributions::weighted::WeightedError"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/weighted/alias_method/struct.WeightedIndex.html\" title=\"struct rand::distributions::weighted::alias_method::WeightedIndex\">WeightedIndex</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as <a class=\"trait\" href=\"rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a>&gt;::<a class=\"type\" href=\"rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" title=\"type rand::distributions::uniform::SampleUniform::Sampler\">Sampler</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::weighted::alias_method::WeightedIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/struct.EntropyRng.html\" title=\"struct rand::rngs::EntropyRng\">EntropyRng</a>","synthetic":true,"types":["rand::rngs::entropy::EntropyRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/struct.StdRng.html\" title=\"struct rand::rngs::StdRng\">StdRng</a>","synthetic":true,"types":["rand::rngs::std::StdRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/struct.ThreadRng.html\" title=\"struct rand::rngs::ThreadRng\">ThreadRng</a>","synthetic":true,"types":["rand::rngs::thread::ThreadRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReadError.html\" title=\"struct rand::rngs::adapter::ReadError\">ReadError</a>","synthetic":true,"types":["rand::rngs::adapter::read::ReadError"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReadRng.html\" title=\"struct rand::rngs::adapter::ReadRng\">ReadRng</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::rngs::adapter::read::ReadRng"]},{"text":"impl&lt;R, Rsdr&gt; Freeze for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReseedingRng.html\" title=\"struct rand::rngs::adapter::ReseedingRng\">ReseedingRng</a>&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"rand_core/block/trait.BlockRngCore.html\" title=\"trait rand_core::block::BlockRngCore\">BlockRngCore</a>&gt;::<a class=\"type\" href=\"rand_core/block/trait.BlockRngCore.html#associatedtype.Results\" title=\"type rand_core::block::BlockRngCore::Results\">Results</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::rngs::adapter::reseeding::ReseedingRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/mock/struct.StepRng.html\" title=\"struct rand::rngs::mock::StepRng\">StepRng</a>","synthetic":true,"types":["rand::rngs::mock::StepRng"]},{"text":"impl&lt;'a, S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, T&gt; Freeze for <a class=\"struct\" href=\"rand/seq/struct.SliceChooseIter.html\" title=\"struct rand::seq::SliceChooseIter\">SliceChooseIter</a>&lt;'a, S, T&gt;","synthetic":true,"types":["rand::seq::SliceChooseIter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/seq/index/enum.IndexVec.html\" title=\"enum rand::seq::index::IndexVec\">IndexVec</a>","synthetic":true,"types":["rand::seq::index::IndexVec"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"rand/seq/index/enum.IndexVecIter.html\" title=\"enum rand::seq::index::IndexVecIter\">IndexVecIter</a>&lt;'a&gt;","synthetic":true,"types":["rand::seq::index::IndexVecIter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/seq/index/enum.IndexVecIntoIter.html\" title=\"enum rand::seq::index::IndexVecIntoIter\">IndexVecIntoIter</a>","synthetic":true,"types":["rand::seq::index::IndexVecIntoIter"]}];
implementors["rand_chacha"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha12Core.html\" title=\"struct rand_chacha::ChaCha12Core\">ChaCha12Core</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha12Core"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha12Rng.html\" title=\"struct rand_chacha::ChaCha12Rng\">ChaCha12Rng</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha12Rng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha20Core.html\" title=\"struct rand_chacha::ChaCha20Core\">ChaCha20Core</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha20Core"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha20Rng.html\" title=\"struct rand_chacha::ChaCha20Rng\">ChaCha20Rng</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha20Rng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha8Core.html\" title=\"struct rand_chacha::ChaCha8Core\">ChaCha8Core</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha8Core"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha8Rng.html\" title=\"struct rand_chacha::ChaCha8Rng\">ChaCha8Rng</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha8Rng"]}];
implementors["rand_core"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rand_core/struct.Error.html\" title=\"struct rand_core::Error\">Error</a>","synthetic":true,"types":["rand_core::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_core/struct.OsRng.html\" title=\"struct rand_core::OsRng\">OsRng</a>","synthetic":true,"types":["rand_core::os::OsRng"]},{"text":"impl&lt;R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rand_core/block/struct.BlockRng.html\" title=\"struct rand_core::block::BlockRng\">BlockRng</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"rand_core/block/trait.BlockRngCore.html\" title=\"trait rand_core::block::BlockRngCore\">BlockRngCore</a>&gt;::<a class=\"type\" href=\"rand_core/block/trait.BlockRngCore.html#associatedtype.Results\" title=\"type rand_core::block::BlockRngCore::Results\">Results</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_core::block::BlockRng"]},{"text":"impl&lt;R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rand_core/block/struct.BlockRng64.html\" title=\"struct rand_core::block::BlockRng64\">BlockRng64</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"rand_core/block/trait.BlockRngCore.html\" title=\"trait rand_core::block::BlockRngCore\">BlockRngCore</a>&gt;::<a class=\"type\" href=\"rand_core/block/trait.BlockRngCore.html#associatedtype.Results\" title=\"type rand_core::block::BlockRngCore::Results\">Results</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_core::block::BlockRng64"]}];
implementors["scopeguard"] = [{"text":"impl&lt;T, F, S&gt; Freeze for <a class=\"struct\" href=\"scopeguard/struct.ScopeGuard.html\" title=\"struct scopeguard::ScopeGuard\">ScopeGuard</a>&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["scopeguard::ScopeGuard"]},{"text":"impl Freeze for <a class=\"enum\" href=\"scopeguard/enum.Always.html\" title=\"enum scopeguard::Always\">Always</a>","synthetic":true,"types":["scopeguard::Always"]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.Slab.html\" title=\"struct slab::Slab\">Slab</a>&lt;T&gt;","synthetic":true,"types":["slab::Slab"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.VacantEntry.html\" title=\"struct slab::VacantEntry\">VacantEntry</a>&lt;'a, T&gt;","synthetic":true,"types":["slab::VacantEntry"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.Iter.html\" title=\"struct slab::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["slab::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.IterMut.html\" title=\"struct slab::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["slab::IterMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.Drain.html\" title=\"struct slab::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["slab::Drain"]}];
implementors["smallvec"] = [{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"smallvec/struct.Drain.html\" title=\"struct smallvec::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["smallvec::Drain"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"smallvec/struct.SmallVec.html\" title=\"struct smallvec::SmallVec\">SmallVec</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["smallvec::SmallVec"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"smallvec/struct.IntoIter.html\" title=\"struct smallvec::IntoIter\">IntoIter</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["smallvec::IntoIter"]}];
implementors["spin"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"spin/struct.Mutex.html\" title=\"struct spin::Mutex\">Mutex</a>&lt;T&gt;","synthetic":true,"types":["spin::mutex::Mutex"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/struct.MutexGuard.html\" title=\"struct spin::MutexGuard\">MutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::mutex::MutexGuard"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"spin/struct.RwLock.html\" title=\"struct spin::RwLock\">RwLock</a>&lt;T&gt;","synthetic":true,"types":["spin::rw_lock::RwLock"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/struct.RwLockReadGuard.html\" title=\"struct spin::RwLockReadGuard\">RwLockReadGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::rw_lock::RwLockReadGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/struct.RwLockWriteGuard.html\" title=\"struct spin::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::rw_lock::RwLockWriteGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/struct.RwLockUpgradeableGuard.html\" title=\"struct spin::RwLockUpgradeableGuard\">RwLockUpgradeableGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::rw_lock::RwLockUpgradeableGuard"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"spin/struct.Once.html\" title=\"struct spin::Once\">Once</a>&lt;T&gt;","synthetic":true,"types":["spin::once::Once"]}];
implementors["syn"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Attribute.html\" title=\"struct syn::Attribute\">Attribute</a>","synthetic":true,"types":["syn::attr::Attribute"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MetaList.html\" title=\"struct syn::MetaList\">MetaList</a>","synthetic":true,"types":["syn::attr::MetaList"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MetaNameValue.html\" title=\"struct syn::MetaNameValue\">MetaNameValue</a>","synthetic":true,"types":["syn::attr::MetaNameValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Field.html\" title=\"struct syn::Field\">Field</a>","synthetic":true,"types":["syn::data::Field"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldsNamed.html\" title=\"struct syn::FieldsNamed\">FieldsNamed</a>","synthetic":true,"types":["syn::data::FieldsNamed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldsUnnamed.html\" title=\"struct syn::FieldsUnnamed\">FieldsUnnamed</a>","synthetic":true,"types":["syn::data::FieldsUnnamed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Variant.html\" title=\"struct syn::Variant\">Variant</a>","synthetic":true,"types":["syn::data::Variant"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisCrate.html\" title=\"struct syn::VisCrate\">VisCrate</a>","synthetic":true,"types":["syn::data::VisCrate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisPublic.html\" title=\"struct syn::VisPublic\">VisPublic</a>","synthetic":true,"types":["syn::data::VisPublic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisRestricted.html\" title=\"struct syn::VisRestricted\">VisRestricted</a>","synthetic":true,"types":["syn::data::VisRestricted"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprArray.html\" title=\"struct syn::ExprArray\">ExprArray</a>","synthetic":true,"types":["syn::expr::ExprArray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAssign.html\" title=\"struct syn::ExprAssign\">ExprAssign</a>","synthetic":true,"types":["syn::expr::ExprAssign"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAssignOp.html\" title=\"struct syn::ExprAssignOp\">ExprAssignOp</a>","synthetic":true,"types":["syn::expr::ExprAssignOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAsync.html\" title=\"struct syn::ExprAsync\">ExprAsync</a>","synthetic":true,"types":["syn::expr::ExprAsync"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBinary.html\" title=\"struct syn::ExprBinary\">ExprBinary</a>","synthetic":true,"types":["syn::expr::ExprBinary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBlock.html\" title=\"struct syn::ExprBlock\">ExprBlock</a>","synthetic":true,"types":["syn::expr::ExprBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBox.html\" title=\"struct syn::ExprBox\">ExprBox</a>","synthetic":true,"types":["syn::expr::ExprBox"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBreak.html\" title=\"struct syn::ExprBreak\">ExprBreak</a>","synthetic":true,"types":["syn::expr::ExprBreak"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprCall.html\" title=\"struct syn::ExprCall\">ExprCall</a>","synthetic":true,"types":["syn::expr::ExprCall"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprCast.html\" title=\"struct syn::ExprCast\">ExprCast</a>","synthetic":true,"types":["syn::expr::ExprCast"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprClosure.html\" title=\"struct syn::ExprClosure\">ExprClosure</a>","synthetic":true,"types":["syn::expr::ExprClosure"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprContinue.html\" title=\"struct syn::ExprContinue\">ExprContinue</a>","synthetic":true,"types":["syn::expr::ExprContinue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprField.html\" title=\"struct syn::ExprField\">ExprField</a>","synthetic":true,"types":["syn::expr::ExprField"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprForLoop.html\" title=\"struct syn::ExprForLoop\">ExprForLoop</a>","synthetic":true,"types":["syn::expr::ExprForLoop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprGroup.html\" title=\"struct syn::ExprGroup\">ExprGroup</a>","synthetic":true,"types":["syn::expr::ExprGroup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprIf.html\" title=\"struct syn::ExprIf\">ExprIf</a>","synthetic":true,"types":["syn::expr::ExprIf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprInPlace.html\" title=\"struct syn::ExprInPlace\">ExprInPlace</a>","synthetic":true,"types":["syn::expr::ExprInPlace"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprIndex.html\" title=\"struct syn::ExprIndex\">ExprIndex</a>","synthetic":true,"types":["syn::expr::ExprIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLet.html\" title=\"struct syn::ExprLet\">ExprLet</a>","synthetic":true,"types":["syn::expr::ExprLet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLit.html\" title=\"struct syn::ExprLit\">ExprLit</a>","synthetic":true,"types":["syn::expr::ExprLit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLoop.html\" title=\"struct syn::ExprLoop\">ExprLoop</a>","synthetic":true,"types":["syn::expr::ExprLoop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMacro.html\" title=\"struct syn::ExprMacro\">ExprMacro</a>","synthetic":true,"types":["syn::expr::ExprMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMatch.html\" title=\"struct syn::ExprMatch\">ExprMatch</a>","synthetic":true,"types":["syn::expr::ExprMatch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMethodCall.html\" title=\"struct syn::ExprMethodCall\">ExprMethodCall</a>","synthetic":true,"types":["syn::expr::ExprMethodCall"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprParen.html\" title=\"struct syn::ExprParen\">ExprParen</a>","synthetic":true,"types":["syn::expr::ExprParen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprPath.html\" title=\"struct syn::ExprPath\">ExprPath</a>","synthetic":true,"types":["syn::expr::ExprPath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprRange.html\" title=\"struct syn::ExprRange\">ExprRange</a>","synthetic":true,"types":["syn::expr::ExprRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprReference.html\" title=\"struct syn::ExprReference\">ExprReference</a>","synthetic":true,"types":["syn::expr::ExprReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprRepeat.html\" title=\"struct syn::ExprRepeat\">ExprRepeat</a>","synthetic":true,"types":["syn::expr::ExprRepeat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprReturn.html\" title=\"struct syn::ExprReturn\">ExprReturn</a>","synthetic":true,"types":["syn::expr::ExprReturn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprStruct.html\" title=\"struct syn::ExprStruct\">ExprStruct</a>","synthetic":true,"types":["syn::expr::ExprStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTry.html\" title=\"struct syn::ExprTry\">ExprTry</a>","synthetic":true,"types":["syn::expr::ExprTry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTryBlock.html\" title=\"struct syn::ExprTryBlock\">ExprTryBlock</a>","synthetic":true,"types":["syn::expr::ExprTryBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTuple.html\" title=\"struct syn::ExprTuple\">ExprTuple</a>","synthetic":true,"types":["syn::expr::ExprTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprType.html\" title=\"struct syn::ExprType\">ExprType</a>","synthetic":true,"types":["syn::expr::ExprType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprUnary.html\" title=\"struct syn::ExprUnary\">ExprUnary</a>","synthetic":true,"types":["syn::expr::ExprUnary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprUnsafe.html\" title=\"struct syn::ExprUnsafe\">ExprUnsafe</a>","synthetic":true,"types":["syn::expr::ExprUnsafe"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprVerbatim.html\" title=\"struct syn::ExprVerbatim\">ExprVerbatim</a>","synthetic":true,"types":["syn::expr::ExprVerbatim"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprWhile.html\" title=\"struct syn::ExprWhile\">ExprWhile</a>","synthetic":true,"types":["syn::expr::ExprWhile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprYield.html\" title=\"struct syn::ExprYield\">ExprYield</a>","synthetic":true,"types":["syn::expr::ExprYield"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Index.html\" title=\"struct syn::Index\">Index</a>","synthetic":true,"types":["syn::expr::Index"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.BoundLifetimes.html\" title=\"struct syn::BoundLifetimes\">BoundLifetimes</a>","synthetic":true,"types":["syn::generics::BoundLifetimes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ConstParam.html\" title=\"struct syn::ConstParam\">ConstParam</a>","synthetic":true,"types":["syn::generics::ConstParam"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Generics.html\" title=\"struct syn::Generics\">Generics</a>","synthetic":true,"types":["syn::generics::Generics"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LifetimeDef.html\" title=\"struct syn::LifetimeDef\">LifetimeDef</a>","synthetic":true,"types":["syn::generics::LifetimeDef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateEq.html\" title=\"struct syn::PredicateEq\">PredicateEq</a>","synthetic":true,"types":["syn::generics::PredicateEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateLifetime.html\" title=\"struct syn::PredicateLifetime\">PredicateLifetime</a>","synthetic":true,"types":["syn::generics::PredicateLifetime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateType.html\" title=\"struct syn::PredicateType\">PredicateType</a>","synthetic":true,"types":["syn::generics::PredicateType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitBound.html\" title=\"struct syn::TraitBound\">TraitBound</a>","synthetic":true,"types":["syn::generics::TraitBound"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeParam.html\" title=\"struct syn::TypeParam\">TypeParam</a>","synthetic":true,"types":["syn::generics::TypeParam"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.WhereClause.html\" title=\"struct syn::WhereClause\">WhereClause</a>","synthetic":true,"types":["syn::generics::WhereClause"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.ImplGenerics.html\" title=\"struct syn::ImplGenerics\">ImplGenerics</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::ImplGenerics"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.Turbofish.html\" title=\"struct syn::Turbofish\">Turbofish</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::Turbofish"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.TypeGenerics.html\" title=\"struct syn::TypeGenerics\">TypeGenerics</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::TypeGenerics"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Lifetime.html\" title=\"struct syn::Lifetime\">Lifetime</a>","synthetic":true,"types":["syn::lifetime::Lifetime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitBool.html\" title=\"struct syn::LitBool\">LitBool</a>","synthetic":true,"types":["syn::lit::LitBool"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitByte.html\" title=\"struct syn::LitByte\">LitByte</a>","synthetic":true,"types":["syn::lit::LitByte"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitByteStr.html\" title=\"struct syn::LitByteStr\">LitByteStr</a>","synthetic":true,"types":["syn::lit::LitByteStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitChar.html\" title=\"struct syn::LitChar\">LitChar</a>","synthetic":true,"types":["syn::lit::LitChar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitFloat.html\" title=\"struct syn::LitFloat\">LitFloat</a>","synthetic":true,"types":["syn::lit::LitFloat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitInt.html\" title=\"struct syn::LitInt\">LitInt</a>","synthetic":true,"types":["syn::lit::LitInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitStr.html\" title=\"struct syn::LitStr\">LitStr</a>","synthetic":true,"types":["syn::lit::LitStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitVerbatim.html\" title=\"struct syn::LitVerbatim\">LitVerbatim</a>","synthetic":true,"types":["syn::lit::LitVerbatim"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Macro.html\" title=\"struct syn::Macro\">Macro</a>","synthetic":true,"types":["syn::mac::Macro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataEnum.html\" title=\"struct syn::DataEnum\">DataEnum</a>","synthetic":true,"types":["syn::derive::DataEnum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataStruct.html\" title=\"struct syn::DataStruct\">DataStruct</a>","synthetic":true,"types":["syn::derive::DataStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataUnion.html\" title=\"struct syn::DataUnion\">DataUnion</a>","synthetic":true,"types":["syn::derive::DataUnion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DeriveInput.html\" title=\"struct syn::DeriveInput\">DeriveInput</a>","synthetic":true,"types":["syn::derive::DeriveInput"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Abi.html\" title=\"struct syn::Abi\">Abi</a>","synthetic":true,"types":["syn::ty::Abi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.BareFnArg.html\" title=\"struct syn::BareFnArg\">BareFnArg</a>","synthetic":true,"types":["syn::ty::BareFnArg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeArray.html\" title=\"struct syn::TypeArray\">TypeArray</a>","synthetic":true,"types":["syn::ty::TypeArray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeBareFn.html\" title=\"struct syn::TypeBareFn\">TypeBareFn</a>","synthetic":true,"types":["syn::ty::TypeBareFn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeGroup.html\" title=\"struct syn::TypeGroup\">TypeGroup</a>","synthetic":true,"types":["syn::ty::TypeGroup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeImplTrait.html\" title=\"struct syn::TypeImplTrait\">TypeImplTrait</a>","synthetic":true,"types":["syn::ty::TypeImplTrait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeInfer.html\" title=\"struct syn::TypeInfer\">TypeInfer</a>","synthetic":true,"types":["syn::ty::TypeInfer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeMacro.html\" title=\"struct syn::TypeMacro\">TypeMacro</a>","synthetic":true,"types":["syn::ty::TypeMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeNever.html\" title=\"struct syn::TypeNever\">TypeNever</a>","synthetic":true,"types":["syn::ty::TypeNever"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeParen.html\" title=\"struct syn::TypeParen\">TypeParen</a>","synthetic":true,"types":["syn::ty::TypeParen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypePath.html\" title=\"struct syn::TypePath\">TypePath</a>","synthetic":true,"types":["syn::ty::TypePath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypePtr.html\" title=\"struct syn::TypePtr\">TypePtr</a>","synthetic":true,"types":["syn::ty::TypePtr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeReference.html\" title=\"struct syn::TypeReference\">TypeReference</a>","synthetic":true,"types":["syn::ty::TypeReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeSlice.html\" title=\"struct syn::TypeSlice\">TypeSlice</a>","synthetic":true,"types":["syn::ty::TypeSlice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeTraitObject.html\" title=\"struct syn::TypeTraitObject\">TypeTraitObject</a>","synthetic":true,"types":["syn::ty::TypeTraitObject"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeTuple.html\" title=\"struct syn::TypeTuple\">TypeTuple</a>","synthetic":true,"types":["syn::ty::TypeTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeVerbatim.html\" title=\"struct syn::TypeVerbatim\">TypeVerbatim</a>","synthetic":true,"types":["syn::ty::TypeVerbatim"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.AngleBracketedGenericArguments.html\" title=\"struct syn::AngleBracketedGenericArguments\">AngleBracketedGenericArguments</a>","synthetic":true,"types":["syn::path::AngleBracketedGenericArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Binding.html\" title=\"struct syn::Binding\">Binding</a>","synthetic":true,"types":["syn::path::Binding"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Constraint.html\" title=\"struct syn::Constraint\">Constraint</a>","synthetic":true,"types":["syn::path::Constraint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ParenthesizedGenericArguments.html\" title=\"struct syn::ParenthesizedGenericArguments\">ParenthesizedGenericArguments</a>","synthetic":true,"types":["syn::path::ParenthesizedGenericArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Path.html\" title=\"struct syn::Path\">Path</a>","synthetic":true,"types":["syn::path::Path"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PathSegment.html\" title=\"struct syn::PathSegment\">PathSegment</a>","synthetic":true,"types":["syn::path::PathSegment"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.QSelf.html\" title=\"struct syn::QSelf\">QSelf</a>","synthetic":true,"types":["syn::path::QSelf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Error.html\" title=\"struct syn::Error\">Error</a>","synthetic":true,"types":["syn::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.AttrStyle.html\" title=\"enum syn::AttrStyle\">AttrStyle</a>","synthetic":true,"types":["syn::attr::AttrStyle"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Meta.html\" title=\"enum syn::Meta\">Meta</a>","synthetic":true,"types":["syn::attr::Meta"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.NestedMeta.html\" title=\"enum syn::NestedMeta\">NestedMeta</a>","synthetic":true,"types":["syn::attr::NestedMeta"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Fields.html\" title=\"enum syn::Fields\">Fields</a>","synthetic":true,"types":["syn::data::Fields"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Visibility.html\" title=\"enum syn::Visibility\">Visibility</a>","synthetic":true,"types":["syn::data::Visibility"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Expr.html\" title=\"enum syn::Expr\">Expr</a>","synthetic":true,"types":["syn::expr::Expr"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Member.html\" title=\"enum syn::Member\">Member</a>","synthetic":true,"types":["syn::expr::Member"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericParam.html\" title=\"enum syn::GenericParam\">GenericParam</a>","synthetic":true,"types":["syn::generics::GenericParam"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TraitBoundModifier.html\" title=\"enum syn::TraitBoundModifier\">TraitBoundModifier</a>","synthetic":true,"types":["syn::generics::TraitBoundModifier"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TypeParamBound.html\" title=\"enum syn::TypeParamBound\">TypeParamBound</a>","synthetic":true,"types":["syn::generics::TypeParamBound"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.WherePredicate.html\" title=\"enum syn::WherePredicate\">WherePredicate</a>","synthetic":true,"types":["syn::generics::WherePredicate"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.FloatSuffix.html\" title=\"enum syn::FloatSuffix\">FloatSuffix</a>","synthetic":true,"types":["syn::lit::FloatSuffix"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.IntSuffix.html\" title=\"enum syn::IntSuffix\">IntSuffix</a>","synthetic":true,"types":["syn::lit::IntSuffix"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Lit.html\" title=\"enum syn::Lit\">Lit</a>","synthetic":true,"types":["syn::lit::Lit"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.StrStyle.html\" title=\"enum syn::StrStyle\">StrStyle</a>","synthetic":true,"types":["syn::lit::StrStyle"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.MacroDelimiter.html\" title=\"enum syn::MacroDelimiter\">MacroDelimiter</a>","synthetic":true,"types":["syn::mac::MacroDelimiter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Data.html\" title=\"enum syn::Data\">Data</a>","synthetic":true,"types":["syn::derive::Data"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.BinOp.html\" title=\"enum syn::BinOp\">BinOp</a>","synthetic":true,"types":["syn::op::BinOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.UnOp.html\" title=\"enum syn::UnOp\">UnOp</a>","synthetic":true,"types":["syn::op::UnOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.BareFnArgName.html\" title=\"enum syn::BareFnArgName\">BareFnArgName</a>","synthetic":true,"types":["syn::ty::BareFnArgName"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.ReturnType.html\" title=\"enum syn::ReturnType\">ReturnType</a>","synthetic":true,"types":["syn::ty::ReturnType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Type.html\" title=\"enum syn::Type\">Type</a>","synthetic":true,"types":["syn::ty::Type"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericArgument.html\" title=\"enum syn::GenericArgument\">GenericArgument</a>","synthetic":true,"types":["syn::path::GenericArgument"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.PathArguments.html\" title=\"enum syn::PathArguments\">PathArguments</a>","synthetic":true,"types":["syn::path::PathArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Underscore.html\" title=\"struct syn::token::Underscore\">Underscore</a>","synthetic":true,"types":["syn::token::Underscore"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Abstract.html\" title=\"struct syn::token::Abstract\">Abstract</a>","synthetic":true,"types":["syn::token::Abstract"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.As.html\" title=\"struct syn::token::As\">As</a>","synthetic":true,"types":["syn::token::As"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Async.html\" title=\"struct syn::token::Async\">Async</a>","synthetic":true,"types":["syn::token::Async"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Auto.html\" title=\"struct syn::token::Auto\">Auto</a>","synthetic":true,"types":["syn::token::Auto"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Become.html\" title=\"struct syn::token::Become\">Become</a>","synthetic":true,"types":["syn::token::Become"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Box.html\" title=\"struct syn::token::Box\">Box</a>","synthetic":true,"types":["syn::token::Box"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Break.html\" title=\"struct syn::token::Break\">Break</a>","synthetic":true,"types":["syn::token::Break"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Const.html\" title=\"struct syn::token::Const\">Const</a>","synthetic":true,"types":["syn::token::Const"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Continue.html\" title=\"struct syn::token::Continue\">Continue</a>","synthetic":true,"types":["syn::token::Continue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Crate.html\" title=\"struct syn::token::Crate\">Crate</a>","synthetic":true,"types":["syn::token::Crate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Default.html\" title=\"struct syn::token::Default\">Default</a>","synthetic":true,"types":["syn::token::Default"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Do.html\" title=\"struct syn::token::Do\">Do</a>","synthetic":true,"types":["syn::token::Do"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dyn.html\" title=\"struct syn::token::Dyn\">Dyn</a>","synthetic":true,"types":["syn::token::Dyn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Else.html\" title=\"struct syn::token::Else\">Else</a>","synthetic":true,"types":["syn::token::Else"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Enum.html\" title=\"struct syn::token::Enum\">Enum</a>","synthetic":true,"types":["syn::token::Enum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Existential.html\" title=\"struct syn::token::Existential\">Existential</a>","synthetic":true,"types":["syn::token::Existential"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Extern.html\" title=\"struct syn::token::Extern\">Extern</a>","synthetic":true,"types":["syn::token::Extern"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Final.html\" title=\"struct syn::token::Final\">Final</a>","synthetic":true,"types":["syn::token::Final"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Fn.html\" title=\"struct syn::token::Fn\">Fn</a>","synthetic":true,"types":["syn::token::Fn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.For.html\" title=\"struct syn::token::For\">For</a>","synthetic":true,"types":["syn::token::For"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.If.html\" title=\"struct syn::token::If\">If</a>","synthetic":true,"types":["syn::token::If"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Impl.html\" title=\"struct syn::token::Impl\">Impl</a>","synthetic":true,"types":["syn::token::Impl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.In.html\" title=\"struct syn::token::In\">In</a>","synthetic":true,"types":["syn::token::In"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Let.html\" title=\"struct syn::token::Let\">Let</a>","synthetic":true,"types":["syn::token::Let"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Loop.html\" title=\"struct syn::token::Loop\">Loop</a>","synthetic":true,"types":["syn::token::Loop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Macro.html\" title=\"struct syn::token::Macro\">Macro</a>","synthetic":true,"types":["syn::token::Macro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Match.html\" title=\"struct syn::token::Match\">Match</a>","synthetic":true,"types":["syn::token::Match"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Mod.html\" title=\"struct syn::token::Mod\">Mod</a>","synthetic":true,"types":["syn::token::Mod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Move.html\" title=\"struct syn::token::Move\">Move</a>","synthetic":true,"types":["syn::token::Move"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Mut.html\" title=\"struct syn::token::Mut\">Mut</a>","synthetic":true,"types":["syn::token::Mut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Override.html\" title=\"struct syn::token::Override\">Override</a>","synthetic":true,"types":["syn::token::Override"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Priv.html\" title=\"struct syn::token::Priv\">Priv</a>","synthetic":true,"types":["syn::token::Priv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Pub.html\" title=\"struct syn::token::Pub\">Pub</a>","synthetic":true,"types":["syn::token::Pub"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ref.html\" title=\"struct syn::token::Ref\">Ref</a>","synthetic":true,"types":["syn::token::Ref"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Return.html\" title=\"struct syn::token::Return\">Return</a>","synthetic":true,"types":["syn::token::Return"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SelfType.html\" title=\"struct syn::token::SelfType\">SelfType</a>","synthetic":true,"types":["syn::token::SelfType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SelfValue.html\" title=\"struct syn::token::SelfValue\">SelfValue</a>","synthetic":true,"types":["syn::token::SelfValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Static.html\" title=\"struct syn::token::Static\">Static</a>","synthetic":true,"types":["syn::token::Static"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Struct.html\" title=\"struct syn::token::Struct\">Struct</a>","synthetic":true,"types":["syn::token::Struct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Super.html\" title=\"struct syn::token::Super\">Super</a>","synthetic":true,"types":["syn::token::Super"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Trait.html\" title=\"struct syn::token::Trait\">Trait</a>","synthetic":true,"types":["syn::token::Trait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Try.html\" title=\"struct syn::token::Try\">Try</a>","synthetic":true,"types":["syn::token::Try"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Type.html\" title=\"struct syn::token::Type\">Type</a>","synthetic":true,"types":["syn::token::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Typeof.html\" title=\"struct syn::token::Typeof\">Typeof</a>","synthetic":true,"types":["syn::token::Typeof"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Union.html\" title=\"struct syn::token::Union\">Union</a>","synthetic":true,"types":["syn::token::Union"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Unsafe.html\" title=\"struct syn::token::Unsafe\">Unsafe</a>","synthetic":true,"types":["syn::token::Unsafe"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Unsized.html\" title=\"struct syn::token::Unsized\">Unsized</a>","synthetic":true,"types":["syn::token::Unsized"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Use.html\" title=\"struct syn::token::Use\">Use</a>","synthetic":true,"types":["syn::token::Use"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Virtual.html\" title=\"struct syn::token::Virtual\">Virtual</a>","synthetic":true,"types":["syn::token::Virtual"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Where.html\" title=\"struct syn::token::Where\">Where</a>","synthetic":true,"types":["syn::token::Where"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.While.html\" title=\"struct syn::token::While\">While</a>","synthetic":true,"types":["syn::token::While"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Yield.html\" title=\"struct syn::token::Yield\">Yield</a>","synthetic":true,"types":["syn::token::Yield"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Add.html\" title=\"struct syn::token::Add\">Add</a>","synthetic":true,"types":["syn::token::Add"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AddEq.html\" title=\"struct syn::token::AddEq\">AddEq</a>","synthetic":true,"types":["syn::token::AddEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.And.html\" title=\"struct syn::token::And\">And</a>","synthetic":true,"types":["syn::token::And"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AndAnd.html\" title=\"struct syn::token::AndAnd\">AndAnd</a>","synthetic":true,"types":["syn::token::AndAnd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AndEq.html\" title=\"struct syn::token::AndEq\">AndEq</a>","synthetic":true,"types":["syn::token::AndEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.At.html\" title=\"struct syn::token::At\">At</a>","synthetic":true,"types":["syn::token::At"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Bang.html\" title=\"struct syn::token::Bang\">Bang</a>","synthetic":true,"types":["syn::token::Bang"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Caret.html\" title=\"struct syn::token::Caret\">Caret</a>","synthetic":true,"types":["syn::token::Caret"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.CaretEq.html\" title=\"struct syn::token::CaretEq\">CaretEq</a>","synthetic":true,"types":["syn::token::CaretEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Colon.html\" title=\"struct syn::token::Colon\">Colon</a>","synthetic":true,"types":["syn::token::Colon"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Colon2.html\" title=\"struct syn::token::Colon2\">Colon2</a>","synthetic":true,"types":["syn::token::Colon2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Comma.html\" title=\"struct syn::token::Comma\">Comma</a>","synthetic":true,"types":["syn::token::Comma"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Div.html\" title=\"struct syn::token::Div\">Div</a>","synthetic":true,"types":["syn::token::Div"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.DivEq.html\" title=\"struct syn::token::DivEq\">DivEq</a>","synthetic":true,"types":["syn::token::DivEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dollar.html\" title=\"struct syn::token::Dollar\">Dollar</a>","synthetic":true,"types":["syn::token::Dollar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot.html\" title=\"struct syn::token::Dot\">Dot</a>","synthetic":true,"types":["syn::token::Dot"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot2.html\" title=\"struct syn::token::Dot2\">Dot2</a>","synthetic":true,"types":["syn::token::Dot2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot3.html\" title=\"struct syn::token::Dot3\">Dot3</a>","synthetic":true,"types":["syn::token::Dot3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.DotDotEq.html\" title=\"struct syn::token::DotDotEq\">DotDotEq</a>","synthetic":true,"types":["syn::token::DotDotEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Eq.html\" title=\"struct syn::token::Eq\">Eq</a>","synthetic":true,"types":["syn::token::Eq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.EqEq.html\" title=\"struct syn::token::EqEq\">EqEq</a>","synthetic":true,"types":["syn::token::EqEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ge.html\" title=\"struct syn::token::Ge\">Ge</a>","synthetic":true,"types":["syn::token::Ge"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Gt.html\" title=\"struct syn::token::Gt\">Gt</a>","synthetic":true,"types":["syn::token::Gt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Le.html\" title=\"struct syn::token::Le\">Le</a>","synthetic":true,"types":["syn::token::Le"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Lt.html\" title=\"struct syn::token::Lt\">Lt</a>","synthetic":true,"types":["syn::token::Lt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.MulEq.html\" title=\"struct syn::token::MulEq\">MulEq</a>","synthetic":true,"types":["syn::token::MulEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ne.html\" title=\"struct syn::token::Ne\">Ne</a>","synthetic":true,"types":["syn::token::Ne"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Or.html\" title=\"struct syn::token::Or\">Or</a>","synthetic":true,"types":["syn::token::Or"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.OrEq.html\" title=\"struct syn::token::OrEq\">OrEq</a>","synthetic":true,"types":["syn::token::OrEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.OrOr.html\" title=\"struct syn::token::OrOr\">OrOr</a>","synthetic":true,"types":["syn::token::OrOr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Pound.html\" title=\"struct syn::token::Pound\">Pound</a>","synthetic":true,"types":["syn::token::Pound"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Question.html\" title=\"struct syn::token::Question\">Question</a>","synthetic":true,"types":["syn::token::Question"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.RArrow.html\" title=\"struct syn::token::RArrow\">RArrow</a>","synthetic":true,"types":["syn::token::RArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.LArrow.html\" title=\"struct syn::token::LArrow\">LArrow</a>","synthetic":true,"types":["syn::token::LArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Rem.html\" title=\"struct syn::token::Rem\">Rem</a>","synthetic":true,"types":["syn::token::Rem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.RemEq.html\" title=\"struct syn::token::RemEq\">RemEq</a>","synthetic":true,"types":["syn::token::RemEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.FatArrow.html\" title=\"struct syn::token::FatArrow\">FatArrow</a>","synthetic":true,"types":["syn::token::FatArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Semi.html\" title=\"struct syn::token::Semi\">Semi</a>","synthetic":true,"types":["syn::token::Semi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Shl.html\" title=\"struct syn::token::Shl\">Shl</a>","synthetic":true,"types":["syn::token::Shl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.ShlEq.html\" title=\"struct syn::token::ShlEq\">ShlEq</a>","synthetic":true,"types":["syn::token::ShlEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Shr.html\" title=\"struct syn::token::Shr\">Shr</a>","synthetic":true,"types":["syn::token::Shr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.ShrEq.html\" title=\"struct syn::token::ShrEq\">ShrEq</a>","synthetic":true,"types":["syn::token::ShrEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Star.html\" title=\"struct syn::token::Star\">Star</a>","synthetic":true,"types":["syn::token::Star"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Sub.html\" title=\"struct syn::token::Sub\">Sub</a>","synthetic":true,"types":["syn::token::Sub"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SubEq.html\" title=\"struct syn::token::SubEq\">SubEq</a>","synthetic":true,"types":["syn::token::SubEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Tilde.html\" title=\"struct syn::token::Tilde\">Tilde</a>","synthetic":true,"types":["syn::token::Tilde"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Brace.html\" title=\"struct syn::token::Brace\">Brace</a>","synthetic":true,"types":["syn::token::Brace"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Bracket.html\" title=\"struct syn::token::Bracket\">Bracket</a>","synthetic":true,"types":["syn::token::Bracket"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Paren.html\" title=\"struct syn::token::Paren\">Paren</a>","synthetic":true,"types":["syn::token::Paren"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Group.html\" title=\"struct syn::token::Group\">Group</a>","synthetic":true,"types":["syn::token::Group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/buffer/struct.TokenBuffer.html\" title=\"struct syn::buffer::TokenBuffer\">TokenBuffer</a>","synthetic":true,"types":["syn::buffer::TokenBuffer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/buffer/struct.Cursor.html\" title=\"struct syn::buffer::Cursor\">Cursor</a>&lt;'a&gt;","synthetic":true,"types":["syn::buffer::Cursor"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Punctuated.html\" title=\"struct syn::punctuated::Punctuated\">Punctuated</a>&lt;T, P&gt;","synthetic":true,"types":["syn::punctuated::Punctuated"]},{"text":"impl&lt;'a, T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Pairs.html\" title=\"struct syn::punctuated::Pairs\">Pairs</a>&lt;'a, T, P&gt;","synthetic":true,"types":["syn::punctuated::Pairs"]},{"text":"impl&lt;'a, T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.PairsMut.html\" title=\"struct syn::punctuated::PairsMut\">PairsMut</a>&lt;'a, T, P&gt;","synthetic":true,"types":["syn::punctuated::PairsMut"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IntoPairs.html\" title=\"struct syn::punctuated::IntoPairs\">IntoPairs</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["syn::punctuated::IntoPairs"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IntoIter.html\" title=\"struct syn::punctuated::IntoIter\">IntoIter</a>&lt;T, P&gt;","synthetic":true,"types":["syn::punctuated::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Iter.html\" title=\"struct syn::punctuated::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["syn::punctuated::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IterMut.html\" title=\"struct syn::punctuated::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["syn::punctuated::IterMut"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"enum\" href=\"syn/punctuated/enum.Pair.html\" title=\"enum syn::punctuated::Pair\">Pair</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["syn::punctuated::Pair"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"syn/parse/struct.Lookahead1.html\" title=\"struct syn::parse::Lookahead1\">Lookahead1</a>&lt;'a&gt;","synthetic":true,"types":["syn::lookahead::Lookahead1"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"syn/parse/struct.ParseBuffer.html\" title=\"struct syn::parse::ParseBuffer\">ParseBuffer</a>&lt;'a&gt;","synthetic":true,"types":["syn::parse::ParseBuffer"]},{"text":"impl&lt;'c, 'a&gt; Freeze for <a class=\"struct\" href=\"syn/parse/struct.StepCursor.html\" title=\"struct syn::parse::StepCursor\">StepCursor</a>&lt;'c, 'a&gt;","synthetic":true,"types":["syn::parse::StepCursor"]}];
implementors["tokio"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/codec/length_delimited/struct.Builder.html\" title=\"struct tokio::codec::length_delimited::Builder\">Builder</a>","synthetic":true,"types":["tokio::codec::length_delimited::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/codec/length_delimited/struct.FrameTooBig.html\" title=\"struct tokio::codec::length_delimited::FrameTooBig\">FrameTooBig</a>","synthetic":true,"types":["tokio::codec::length_delimited::FrameTooBig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/codec/length_delimited/struct.LengthDelimitedCodec.html\" title=\"struct tokio::codec::length_delimited::LengthDelimitedCodec\">LengthDelimitedCodec</a>","synthetic":true,"types":["tokio::codec::length_delimited::LengthDelimitedCodec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/executor/struct.Spawn.html\" title=\"struct tokio::executor::Spawn\">Spawn</a>","synthetic":true,"types":["tokio::executor::Spawn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/runtime/struct.Builder.html\" title=\"struct tokio::runtime::Builder\">Builder</a>","synthetic":true,"types":["tokio::runtime::threadpool::builder::Builder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/runtime/struct.Runtime.html\" title=\"struct tokio::runtime::Runtime\">Runtime</a>","synthetic":true,"types":["tokio::runtime::threadpool::Runtime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/runtime/struct.Shutdown.html\" title=\"struct tokio::runtime::Shutdown\">Shutdown</a>","synthetic":true,"types":["tokio::runtime::threadpool::shutdown::Shutdown"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/runtime/struct.TaskExecutor.html\" title=\"struct tokio::runtime::TaskExecutor\">TaskExecutor</a>","synthetic":true,"types":["tokio::runtime::threadpool::task_executor::TaskExecutor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/runtime/current_thread/struct.Builder.html\" title=\"struct tokio::runtime::current_thread::Builder\">Builder</a>","synthetic":true,"types":["tokio::runtime::current_thread::builder::Builder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/runtime/current_thread/struct.Runtime.html\" title=\"struct tokio::runtime::current_thread::Runtime\">Runtime</a>","synthetic":true,"types":["tokio::runtime::current_thread::runtime::Runtime"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/runtime/current_thread/struct.Handle.html\" title=\"struct tokio::runtime::current_thread::Handle\">Handle</a>","synthetic":true,"types":["tokio::runtime::current_thread::runtime::Handle"]}];
implementors["tokio_codec"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_codec/struct.BytesCodec.html\" title=\"struct tokio_codec::BytesCodec\">BytesCodec</a>","synthetic":true,"types":["tokio_codec::bytes_codec::BytesCodec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_codec/struct.LinesCodec.html\" title=\"struct tokio_codec::LinesCodec\">LinesCodec</a>","synthetic":true,"types":["tokio_codec::lines_codec::LinesCodec"]}];
implementors["tokio_current_thread"] = [{"text":"impl&lt;P&nbsp;=&nbsp;<a class=\"struct\" href=\"tokio_executor/park/struct.ParkThread.html\" title=\"struct tokio_executor::park::ParkThread\">ParkThread</a>&gt; !Freeze for <a class=\"struct\" href=\"tokio_current_thread/struct.CurrentThread.html\" title=\"struct tokio_current_thread::CurrentThread\">CurrentThread</a>&lt;P&gt;","synthetic":true,"types":["tokio_current_thread::CurrentThread"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_current_thread/struct.TaskExecutor.html\" title=\"struct tokio_current_thread::TaskExecutor\">TaskExecutor</a>","synthetic":true,"types":["tokio_current_thread::TaskExecutor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_current_thread/struct.Turn.html\" title=\"struct tokio_current_thread::Turn\">Turn</a>","synthetic":true,"types":["tokio_current_thread::Turn"]},{"text":"impl&lt;'a, P&gt; Freeze for <a class=\"struct\" href=\"tokio_current_thread/struct.Entered.html\" title=\"struct tokio_current_thread::Entered\">Entered</a>&lt;'a, P&gt;","synthetic":true,"types":["tokio_current_thread::Entered"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_current_thread/struct.RunError.html\" title=\"struct tokio_current_thread::RunError\">RunError</a>","synthetic":true,"types":["tokio_current_thread::RunError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_current_thread/struct.RunTimeoutError.html\" title=\"struct tokio_current_thread::RunTimeoutError\">RunTimeoutError</a>","synthetic":true,"types":["tokio_current_thread::RunTimeoutError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_current_thread/struct.TurnError.html\" title=\"struct tokio_current_thread::TurnError\">TurnError</a>","synthetic":true,"types":["tokio_current_thread::TurnError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_current_thread/struct.BlockError.html\" title=\"struct tokio_current_thread::BlockError\">BlockError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_current_thread::BlockError"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio_current_thread/struct.Handle.html\" title=\"struct tokio_current_thread::Handle\">Handle</a>","synthetic":true,"types":["tokio_current_thread::Handle"]}];
implementors["tokio_executor"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_executor/struct.Enter.html\" title=\"struct tokio_executor::Enter\">Enter</a>","synthetic":true,"types":["tokio_executor::enter::Enter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_executor/struct.EnterError.html\" title=\"struct tokio_executor::EnterError\">EnterError</a>","synthetic":true,"types":["tokio_executor::enter::EnterError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_executor/struct.SpawnError.html\" title=\"struct tokio_executor::SpawnError\">SpawnError</a>","synthetic":true,"types":["tokio_executor::error::SpawnError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_executor/struct.DefaultExecutor.html\" title=\"struct tokio_executor::DefaultExecutor\">DefaultExecutor</a>","synthetic":true,"types":["tokio_executor::global::DefaultExecutor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_executor/struct.DefaultGuard.html\" title=\"struct tokio_executor::DefaultGuard\">DefaultGuard</a>","synthetic":true,"types":["tokio_executor::global::DefaultGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_executor/park/struct.ParkThread.html\" title=\"struct tokio_executor::park::ParkThread\">ParkThread</a>","synthetic":true,"types":["tokio_executor::park::ParkThread"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_executor/park/struct.ParkError.html\" title=\"struct tokio_executor::park::ParkError\">ParkError</a>","synthetic":true,"types":["tokio_executor::park::ParkError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_executor/park/struct.UnparkThread.html\" title=\"struct tokio_executor::park::UnparkThread\">UnparkThread</a>","synthetic":true,"types":["tokio_executor::park::UnparkThread"]}];
implementors["tokio_fs"] = [{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"tokio_fs/struct.CreateDirFuture.html\" title=\"struct tokio_fs::CreateDirFuture\">CreateDirFuture</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_fs::create_dir::CreateDirFuture"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"tokio_fs/struct.CreateDirAllFuture.html\" title=\"struct tokio_fs::CreateDirAllFuture\">CreateDirAllFuture</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_fs::create_dir_all::CreateDirAllFuture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_fs/struct.OpenOptions.html\" title=\"struct tokio_fs::OpenOptions\">OpenOptions</a>","synthetic":true,"types":["tokio_fs::file::open_options::OpenOptions"]},{"text":"impl&lt;P, Q&gt; Freeze for <a class=\"struct\" href=\"tokio_fs/struct.HardLinkFuture.html\" title=\"struct tokio_fs::HardLinkFuture\">HardLinkFuture</a>&lt;P, Q&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Q: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_fs::hard_link::HardLinkFuture"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"tokio_fs/struct.MetadataFuture.html\" title=\"struct tokio_fs::MetadataFuture\">MetadataFuture</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_fs::metadata::MetadataFuture"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"tokio_fs/struct.ReadFile.html\" title=\"struct tokio_fs::ReadFile\">ReadFile</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_fs::read::ReadFile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_fs/struct.DirEntry.html\" title=\"struct tokio_fs::DirEntry\">DirEntry</a>","synthetic":true,"types":["tokio_fs::read_dir::DirEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_fs/struct.ReadDir.html\" title=\"struct tokio_fs::ReadDir\">ReadDir</a>","synthetic":true,"types":["tokio_fs::read_dir::ReadDir"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"tokio_fs/struct.ReadDirFuture.html\" title=\"struct tokio_fs::ReadDirFuture\">ReadDirFuture</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_fs::read_dir::ReadDirFuture"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"tokio_fs/struct.ReadLinkFuture.html\" title=\"struct tokio_fs::ReadLinkFuture\">ReadLinkFuture</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_fs::read_link::ReadLinkFuture"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"tokio_fs/struct.RemoveDirFuture.html\" title=\"struct tokio_fs::RemoveDirFuture\">RemoveDirFuture</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_fs::remove_dir::RemoveDirFuture"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"tokio_fs/struct.RemoveFileFuture.html\" title=\"struct tokio_fs::RemoveFileFuture\">RemoveFileFuture</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_fs::remove_file::RemoveFileFuture"]},{"text":"impl&lt;P, Q&gt; Freeze for <a class=\"struct\" href=\"tokio_fs/struct.RenameFuture.html\" title=\"struct tokio_fs::RenameFuture\">RenameFuture</a>&lt;P, Q&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Q: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_fs::rename::RenameFuture"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"tokio_fs/struct.SetPermissionsFuture.html\" title=\"struct tokio_fs::SetPermissionsFuture\">SetPermissionsFuture</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_fs::set_permissions::SetPermissionsFuture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_fs/struct.Stderr.html\" title=\"struct tokio_fs::Stderr\">Stderr</a>","synthetic":true,"types":["tokio_fs::stderr::Stderr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_fs/struct.Stdin.html\" title=\"struct tokio_fs::Stdin\">Stdin</a>","synthetic":true,"types":["tokio_fs::stdin::Stdin"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_fs/struct.Stdout.html\" title=\"struct tokio_fs::Stdout\">Stdout</a>","synthetic":true,"types":["tokio_fs::stdout::Stdout"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"tokio_fs/struct.SymlinkMetadataFuture.html\" title=\"struct tokio_fs::SymlinkMetadataFuture\">SymlinkMetadataFuture</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_fs::symlink_metadata::SymlinkMetadataFuture"]},{"text":"impl&lt;P, C&gt; Freeze for <a class=\"struct\" href=\"tokio_fs/struct.WriteFile.html\" title=\"struct tokio_fs::WriteFile\">WriteFile</a>&lt;P, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_fs::write::WriteFile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_fs/file/struct.CloneFuture.html\" title=\"struct tokio_fs::file::CloneFuture\">CloneFuture</a>","synthetic":true,"types":["tokio_fs::file::clone::CloneFuture"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"tokio_fs/file/struct.CreateFuture.html\" title=\"struct tokio_fs::file::CreateFuture\">CreateFuture</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_fs::file::create::CreateFuture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_fs/file/struct.MetadataFuture.html\" title=\"struct tokio_fs::file::MetadataFuture\">MetadataFuture</a>","synthetic":true,"types":["tokio_fs::file::metadata::MetadataFuture"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"tokio_fs/file/struct.OpenFuture.html\" title=\"struct tokio_fs::file::OpenFuture\">OpenFuture</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_fs::file::open::OpenFuture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_fs/file/struct.SeekFuture.html\" title=\"struct tokio_fs::file::SeekFuture\">SeekFuture</a>","synthetic":true,"types":["tokio_fs::file::seek::SeekFuture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_fs/file/struct.File.html\" title=\"struct tokio_fs::file::File\">File</a>","synthetic":true,"types":["tokio_fs::file::File"]},{"text":"impl&lt;P, Q&gt; Freeze for <a class=\"struct\" href=\"tokio_fs/os/unix/struct.SymlinkFuture.html\" title=\"struct tokio_fs::os::unix::SymlinkFuture\">SymlinkFuture</a>&lt;P, Q&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Q: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_fs::os::unix::SymlinkFuture"]}];
implementors["tokio_io"] = [{"text":"impl&lt;R, W&gt; Freeze for <a class=\"struct\" href=\"tokio_io/io/struct.Copy.html\" title=\"struct tokio_io::io::Copy\">Copy</a>&lt;R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_io::io::copy::Copy"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"tokio_io/io/struct.Flush.html\" title=\"struct tokio_io::io::Flush\">Flush</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_io::io::flush::Flush"]},{"text":"impl&lt;R, T&gt; Freeze for <a class=\"struct\" href=\"tokio_io/io/struct.Read.html\" title=\"struct tokio_io::io::Read\">Read</a>&lt;R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_io::io::read::Read"]},{"text":"impl&lt;A, T&gt; Freeze for <a class=\"struct\" href=\"tokio_io/io/struct.ReadExact.html\" title=\"struct tokio_io::io::ReadExact\">ReadExact</a>&lt;A, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_io::io::read_exact::ReadExact"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"tokio_io/io/struct.ReadToEnd.html\" title=\"struct tokio_io::io::ReadToEnd\">ReadToEnd</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_io::io::read_to_end::ReadToEnd"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"tokio_io/io/struct.ReadUntil.html\" title=\"struct tokio_io::io::ReadUntil\">ReadUntil</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_io::io::read_until::ReadUntil"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"tokio_io/io/struct.Shutdown.html\" title=\"struct tokio_io::io::Shutdown\">Shutdown</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_io::io::shutdown::Shutdown"]},{"text":"impl&lt;A, T&gt; Freeze for <a class=\"struct\" href=\"tokio_io/io/struct.WriteAll.html\" title=\"struct tokio_io::io::WriteAll\">WriteAll</a>&lt;A, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_io::io::write_all::WriteAll"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_io/io/struct.AllowStdIo.html\" title=\"struct tokio_io::io::AllowStdIo\">AllowStdIo</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_io::allow_std::AllowStdIo"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"tokio_io/io/struct.Lines.html\" title=\"struct tokio_io::io::Lines\">Lines</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_io::lines::Lines"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_io/io/struct.ReadHalf.html\" title=\"struct tokio_io::io::ReadHalf\">ReadHalf</a>&lt;T&gt;","synthetic":true,"types":["tokio_io::split::ReadHalf"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_io/io/struct.WriteHalf.html\" title=\"struct tokio_io::io::WriteHalf\">WriteHalf</a>&lt;T&gt;","synthetic":true,"types":["tokio_io::split::WriteHalf"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_io/io/struct.Window.html\" title=\"struct tokio_io::io::Window\">Window</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_io::window::Window"]}];
implementors["tokio_reactor"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_reactor/struct.Background.html\" title=\"struct tokio_reactor::Background\">Background</a>","synthetic":true,"types":["tokio_reactor::background::Background"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_reactor/struct.Shutdown.html\" title=\"struct tokio_reactor::Shutdown\">Shutdown</a>","synthetic":true,"types":["tokio_reactor::background::Shutdown"]},{"text":"impl&lt;E&gt; !Freeze for <a class=\"struct\" href=\"tokio_reactor/struct.PollEvented.html\" title=\"struct tokio_reactor::PollEvented\">PollEvented</a>&lt;E&gt;","synthetic":true,"types":["tokio_reactor::poll_evented::PollEvented"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio_reactor/struct.Registration.html\" title=\"struct tokio_reactor::Registration\">Registration</a>","synthetic":true,"types":["tokio_reactor::registration::Registration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_reactor/struct.Reactor.html\" title=\"struct tokio_reactor::Reactor\">Reactor</a>","synthetic":true,"types":["tokio_reactor::Reactor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_reactor/struct.Handle.html\" title=\"struct tokio_reactor::Handle\">Handle</a>","synthetic":true,"types":["tokio_reactor::Handle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_reactor/struct.Turn.html\" title=\"struct tokio_reactor::Turn\">Turn</a>","synthetic":true,"types":["tokio_reactor::Turn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_reactor/struct.SetFallbackError.html\" title=\"struct tokio_reactor::SetFallbackError\">SetFallbackError</a>","synthetic":true,"types":["tokio_reactor::SetFallbackError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_reactor/struct.DefaultGuard.html\" title=\"struct tokio_reactor::DefaultGuard\">DefaultGuard</a>","synthetic":true,"types":["tokio_reactor::DefaultGuard"]}];
implementors["tokio_sync"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/lock/struct.Lock.html\" title=\"struct tokio_sync::lock::Lock\">Lock</a>&lt;T&gt;","synthetic":true,"types":["tokio_sync::lock::Lock"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/lock/struct.LockGuard.html\" title=\"struct tokio_sync::lock::LockGuard\">LockGuard</a>&lt;T&gt;","synthetic":true,"types":["tokio_sync::lock::LockGuard"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/mpsc/struct.Receiver.html\" title=\"struct tokio_sync::mpsc::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["tokio_sync::mpsc::bounded::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/mpsc/struct.Sender.html\" title=\"struct tokio_sync::mpsc::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["tokio_sync::mpsc::bounded::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/mpsc/struct.UnboundedReceiver.html\" title=\"struct tokio_sync::mpsc::UnboundedReceiver\">UnboundedReceiver</a>&lt;T&gt;","synthetic":true,"types":["tokio_sync::mpsc::unbounded::UnboundedReceiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/mpsc/struct.UnboundedSender.html\" title=\"struct tokio_sync::mpsc::UnboundedSender\">UnboundedSender</a>&lt;T&gt;","synthetic":true,"types":["tokio_sync::mpsc::unbounded::UnboundedSender"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_sync/mpsc/error/struct.SendError.html\" title=\"struct tokio_sync::mpsc::error::SendError\">SendError</a>","synthetic":true,"types":["tokio_sync::mpsc::bounded::SendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/mpsc/error/struct.TrySendError.html\" title=\"struct tokio_sync::mpsc::error::TrySendError\">TrySendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_sync::mpsc::bounded::TrySendError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_sync/mpsc/error/struct.RecvError.html\" title=\"struct tokio_sync::mpsc::error::RecvError\">RecvError</a>","synthetic":true,"types":["tokio_sync::mpsc::bounded::RecvError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_sync/mpsc/error/struct.UnboundedSendError.html\" title=\"struct tokio_sync::mpsc::error::UnboundedSendError\">UnboundedSendError</a>","synthetic":true,"types":["tokio_sync::mpsc::unbounded::UnboundedSendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/mpsc/error/struct.UnboundedTrySendError.html\" title=\"struct tokio_sync::mpsc::error::UnboundedTrySendError\">UnboundedTrySendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_sync::mpsc::unbounded::UnboundedTrySendError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_sync/mpsc/error/struct.UnboundedRecvError.html\" title=\"struct tokio_sync::mpsc::error::UnboundedRecvError\">UnboundedRecvError</a>","synthetic":true,"types":["tokio_sync::mpsc::unbounded::UnboundedRecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/oneshot/struct.Sender.html\" title=\"struct tokio_sync::oneshot::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["tokio_sync::oneshot::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/oneshot/struct.Receiver.html\" title=\"struct tokio_sync::oneshot::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["tokio_sync::oneshot::Receiver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_sync/oneshot/error/struct.RecvError.html\" title=\"struct tokio_sync::oneshot::error::RecvError\">RecvError</a>","synthetic":true,"types":["tokio_sync::oneshot::error::RecvError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_sync/oneshot/error/struct.TryRecvError.html\" title=\"struct tokio_sync::oneshot::error::TryRecvError\">TryRecvError</a>","synthetic":true,"types":["tokio_sync::oneshot::error::TryRecvError"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio_sync/semaphore/struct.Semaphore.html\" title=\"struct tokio_sync::semaphore::Semaphore\">Semaphore</a>","synthetic":true,"types":["tokio_sync::semaphore::Semaphore"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_sync/semaphore/struct.Permit.html\" title=\"struct tokio_sync::semaphore::Permit\">Permit</a>","synthetic":true,"types":["tokio_sync::semaphore::Permit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_sync/semaphore/struct.AcquireError.html\" title=\"struct tokio_sync::semaphore::AcquireError\">AcquireError</a>","synthetic":true,"types":["tokio_sync::semaphore::AcquireError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_sync/semaphore/struct.TryAcquireError.html\" title=\"struct tokio_sync::semaphore::TryAcquireError\">TryAcquireError</a>","synthetic":true,"types":["tokio_sync::semaphore::TryAcquireError"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio_sync/task/struct.AtomicTask.html\" title=\"struct tokio_sync::task::AtomicTask\">AtomicTask</a>","synthetic":true,"types":["tokio_sync::task::atomic_task::AtomicTask"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/watch/struct.Receiver.html\" title=\"struct tokio_sync::watch::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["tokio_sync::watch::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/watch/struct.Sender.html\" title=\"struct tokio_sync::watch::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["tokio_sync::watch::Sender"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/watch/struct.Ref.html\" title=\"struct tokio_sync::watch::Ref\">Ref</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio_sync::watch::Ref"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_sync/watch/error/struct.RecvError.html\" title=\"struct tokio_sync::watch::error::RecvError\">RecvError</a>","synthetic":true,"types":["tokio_sync::watch::error::RecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_sync/watch/error/struct.SendError.html\" title=\"struct tokio_sync::watch::error::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_sync::watch::error::SendError"]}];
implementors["tokio_tcp"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio_tcp/struct.Incoming.html\" title=\"struct tokio_tcp::Incoming\">Incoming</a>","synthetic":true,"types":["tokio_tcp::incoming::Incoming"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio_tcp/struct.TcpListener.html\" title=\"struct tokio_tcp::TcpListener\">TcpListener</a>","synthetic":true,"types":["tokio_tcp::listener::TcpListener"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio_tcp/struct.ConnectFuture.html\" title=\"struct tokio_tcp::ConnectFuture\">ConnectFuture</a>","synthetic":true,"types":["tokio_tcp::stream::ConnectFuture"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio_tcp/struct.TcpStream.html\" title=\"struct tokio_tcp::TcpStream\">TcpStream</a>","synthetic":true,"types":["tokio_tcp::stream::TcpStream"]}];
implementors["tokio_threadpool"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_threadpool/struct.BlockingError.html\" title=\"struct tokio_threadpool::BlockingError\">BlockingError</a>","synthetic":true,"types":["tokio_threadpool::blocking::BlockingError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_threadpool/struct.Builder.html\" title=\"struct tokio_threadpool::Builder\">Builder</a>","synthetic":true,"types":["tokio_threadpool::builder::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_threadpool/struct.Sender.html\" title=\"struct tokio_threadpool::Sender\">Sender</a>","synthetic":true,"types":["tokio_threadpool::sender::Sender"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_threadpool/struct.Shutdown.html\" title=\"struct tokio_threadpool::Shutdown\">Shutdown</a>","synthetic":true,"types":["tokio_threadpool::shutdown::Shutdown"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"tokio_threadpool/struct.SpawnHandle.html\" title=\"struct tokio_threadpool::SpawnHandle\">SpawnHandle</a>&lt;T, E&gt;","synthetic":true,"types":["tokio_threadpool::thread_pool::SpawnHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_threadpool/struct.ThreadPool.html\" title=\"struct tokio_threadpool::ThreadPool\">ThreadPool</a>","synthetic":true,"types":["tokio_threadpool::thread_pool::ThreadPool"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio_threadpool/struct.Worker.html\" title=\"struct tokio_threadpool::Worker\">Worker</a>","synthetic":true,"types":["tokio_threadpool::worker::Worker"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_threadpool/struct.WorkerId.html\" title=\"struct tokio_threadpool::WorkerId\">WorkerId</a>","synthetic":true,"types":["tokio_threadpool::worker::WorkerId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_threadpool/park/struct.DefaultPark.html\" title=\"struct tokio_threadpool::park::DefaultPark\">DefaultPark</a>","synthetic":true,"types":["tokio_threadpool::park::default_park::DefaultPark"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_threadpool/park/struct.DefaultUnpark.html\" title=\"struct tokio_threadpool::park::DefaultUnpark\">DefaultUnpark</a>","synthetic":true,"types":["tokio_threadpool::park::default_park::DefaultUnpark"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_threadpool/park/struct.ParkError.html\" title=\"struct tokio_threadpool::park::ParkError\">ParkError</a>","synthetic":true,"types":["tokio_threadpool::park::default_park::ParkError"]}];
implementors["tokio_timer"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_timer/struct.Delay.html\" title=\"struct tokio_timer::Delay\">Delay</a>","synthetic":true,"types":["tokio_timer::delay::Delay"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_timer/delay_queue/struct.DelayQueue.html\" title=\"struct tokio_timer::delay_queue::DelayQueue\">DelayQueue</a>&lt;T&gt;","synthetic":true,"types":["tokio_timer::delay_queue::DelayQueue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_timer/struct.Error.html\" title=\"struct tokio_timer::Error\">Error</a>","synthetic":true,"types":["tokio_timer::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_timer/struct.Interval.html\" title=\"struct tokio_timer::Interval\">Interval</a>","synthetic":true,"types":["tokio_timer::interval::Interval"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_timer/timeout/struct.Timeout.html\" title=\"struct tokio_timer::timeout::Timeout\">Timeout</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_timer::timeout::Timeout"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_timer/clock/struct.Clock.html\" title=\"struct tokio_timer::clock::Clock\">Clock</a>","synthetic":true,"types":["tokio_timer::clock::clock::Clock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_timer/clock/struct.DefaultGuard.html\" title=\"struct tokio_timer::clock::DefaultGuard\">DefaultGuard</a>","synthetic":true,"types":["tokio_timer::clock::clock::DefaultGuard"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_timer/delay_queue/struct.Expired.html\" title=\"struct tokio_timer::delay_queue::Expired\">Expired</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_timer::delay_queue::Expired"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_timer/delay_queue/struct.Key.html\" title=\"struct tokio_timer::delay_queue::Key\">Key</a>","synthetic":true,"types":["tokio_timer::delay_queue::Key"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_timer/throttle/struct.Throttle.html\" title=\"struct tokio_timer::throttle::Throttle\">Throttle</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_timer::throttle::Throttle"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_timer/throttle/struct.ThrottleError.html\" title=\"struct tokio_timer::throttle::ThrottleError\">ThrottleError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_timer::throttle::ThrottleError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_timer/timeout/struct.Error.html\" title=\"struct tokio_timer::timeout::Error\">Error</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_timer::timeout::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_timer/timer/struct.DefaultGuard.html\" title=\"struct tokio_timer::timer::DefaultGuard\">DefaultGuard</a>","synthetic":true,"types":["tokio_timer::timer::handle::DefaultGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_timer/timer/struct.Handle.html\" title=\"struct tokio_timer::timer::Handle\">Handle</a>","synthetic":true,"types":["tokio_timer::timer::handle::Handle"]},{"text":"impl&lt;T, N&gt; Freeze for <a class=\"struct\" href=\"tokio_timer/timer/struct.Timer.html\" title=\"struct tokio_timer::timer::Timer\">Timer</a>&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_timer::timer::Timer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_timer/timer/struct.Turn.html\" title=\"struct tokio_timer::timer::Turn\">Turn</a>","synthetic":true,"types":["tokio_timer::timer::Turn"]}];
implementors["tokio_udp"] = [{"text":"impl&lt;C&gt; !Freeze for <a class=\"struct\" href=\"tokio_udp/struct.UdpFramed.html\" title=\"struct tokio_udp::UdpFramed\">UdpFramed</a>&lt;C&gt;","synthetic":true,"types":["tokio_udp::frame::UdpFramed"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"tokio_udp/struct.RecvDgram.html\" title=\"struct tokio_udp::RecvDgram\">RecvDgram</a>&lt;T&gt;","synthetic":true,"types":["tokio_udp::recv_dgram::RecvDgram"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"tokio_udp/struct.SendDgram.html\" title=\"struct tokio_udp::SendDgram\">SendDgram</a>&lt;T&gt;","synthetic":true,"types":["tokio_udp::send_dgram::SendDgram"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio_udp/struct.UdpSocket.html\" title=\"struct tokio_udp::UdpSocket\">UdpSocket</a>","synthetic":true,"types":["tokio_udp::socket::UdpSocket"]}];
implementors["tokio_uds"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio_uds/struct.UnixDatagram.html\" title=\"struct tokio_uds::UnixDatagram\">UnixDatagram</a>","synthetic":true,"types":["tokio_uds::datagram::UnixDatagram"]},{"text":"impl&lt;A, C&gt; !Freeze for <a class=\"struct\" href=\"tokio_uds/struct.UnixDatagramFramed.html\" title=\"struct tokio_uds::UnixDatagramFramed\">UnixDatagramFramed</a>&lt;A, C&gt;","synthetic":true,"types":["tokio_uds::frame::UnixDatagramFramed"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio_uds/struct.Incoming.html\" title=\"struct tokio_uds::Incoming\">Incoming</a>","synthetic":true,"types":["tokio_uds::incoming::Incoming"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio_uds/struct.UnixListener.html\" title=\"struct tokio_uds::UnixListener\">UnixListener</a>","synthetic":true,"types":["tokio_uds::listener::UnixListener"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"tokio_uds/struct.RecvDgram.html\" title=\"struct tokio_uds::RecvDgram\">RecvDgram</a>&lt;T&gt;","synthetic":true,"types":["tokio_uds::recv_dgram::RecvDgram"]},{"text":"impl&lt;T, P&gt; !Freeze for <a class=\"struct\" href=\"tokio_uds/struct.SendDgram.html\" title=\"struct tokio_uds::SendDgram\">SendDgram</a>&lt;T, P&gt;","synthetic":true,"types":["tokio_uds::send_dgram::SendDgram"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio_uds/struct.ConnectFuture.html\" title=\"struct tokio_uds::ConnectFuture\">ConnectFuture</a>","synthetic":true,"types":["tokio_uds::stream::ConnectFuture"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio_uds/struct.UnixStream.html\" title=\"struct tokio_uds::UnixStream\">UnixStream</a>","synthetic":true,"types":["tokio_uds::stream::UnixStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_uds/struct.UCred.html\" title=\"struct tokio_uds::UCred\">UCred</a>","synthetic":true,"types":["tokio_uds::ucred::UCred"]}];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()